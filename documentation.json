{
    "pipes": [],
    "interfaces": [
        {
            "name": "ConcentratedDisplayStoryTemplate",
            "id": "interface-ConcentratedDisplayStoryTemplate-63967da255da1c35d40b1849915e34b778158680012ca070fe54ab51e79f52ca34924a5b7d99e9fd99597ceb682993e60fc963d79758a486ab9d27f9c2d71e64",
            "file": "src/stories/models/templates/concentrated-display-story-template.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Direction } from '@stories/models/direction.model';\n\nexport interface ConcentratedDisplayStoryTemplate {\n  args: {\n    direction: Direction;\n    text: any;\n    defaultSettings: any;\n    // resolution: TimelineResolution;\n    // metadata: GraphMetadata;\n    // data: GraphData;\n  }\n}\n",
            "properties": [
                {
                    "name": "args",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GraphData",
            "id": "interface-GraphData-3aaec0132a2a3f14724d83fecdfeb5e513275ac539027b7f877748c317ce6bea76b129fa6afeff2f3cec9d8de3ec5f63dbb464cc17d6a70f7007a575979e8c4e",
            "file": "src/app/shared/models/graph-data.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export type GraphSeriesDataLines = Array<{ name: string; data : number[]; }>;\nexport type GraphSeriesDataPie = Array<{ name: string; value : number; }>;\n\nexport interface GraphData {\n  title: {\n    text: string;\n  },\n  legend?: {\n    data: string[];\n  },\n  xAxis?: {\n    data: string[];\n  },\n  series?: {\n    data: GraphSeriesDataLines | GraphSeriesDataPie;\n  }\n}\n",
            "properties": [
                {
                    "name": "legend",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "series",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "xAxis",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GraphMetadata",
            "id": "interface-GraphMetadata-c68bb289af37c21e79b66d8f6dea00c5f015f7571db100a1e49707cda1279d3bffd545dbad2724eb987ee334220d920617dafe5c6a45dbd657d670ffba1c21ae",
            "file": "src/app/shared/models/graph-metadata.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { GraphType } from '../enums/graph-type.enum';\n\nexport interface GraphMetadata {\n  type: GraphType;\n  langDir?: 'lrt' | 'rtl';\n  letterSize?: number;\n  height?: number | string;\n}\n",
            "properties": [
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "langDir",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"lrt\" | \"rtl\"",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "letterSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GraphType",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GraphStoryTemplate",
            "id": "interface-GraphStoryTemplate-3c83ea486fb3cf93025f9cf527884a4330031bfcc6f5237ddff7fd71b94b5f76c7f34725749e7afe9facfd683479ebddba205d2c9fd0e0796572102adf6a0c56",
            "file": "src/stories/models/templates/graph-story-template.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { GraphMetadata } from '@models/graph-metadata.model';\nimport { GraphData } from '@models/graph-data.model';\n\nexport interface GraphStoryTemplate {\n  args: {\n    direction?: 'rtl' | 'ltr'\n    metadata: GraphMetadata;\n    data: GraphData;\n  }\n}\n",
            "properties": [
                {
                    "name": "args",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Medication",
            "id": "interface-Medication-6cd4b425bd5973ab139db120d8e48b5864b49065b39732af327e0f1752975ee635e3c45ba333d56dd5d875502020cd8dc16662198aedc0606c089dc95c19b607",
            "file": "src/stories/models/medication.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ExecutionType } from '@stories/enums/execution-type.enum';\n\nexport interface Medication {\n  id: number;\n  name: string;\n  categoryId: number;\n  type: ExecutionType;\n  timingType?: any;\n  orderTime: number;\n  executionTime: number;\n  duration: number;\n  times: string[];\n}\n\n/*\nexport interface BaseMedication {\n  id: number;\n  categoryId: number;\n  type: ExecutionType;\n  timingType?: any;\n}\n\nexport interface MedicationContinuous extends BaseMedication {\n  orderTime: number;\n  executionTime: number;\n  duration: number;\n}\n\nexport interface MedicationPeriodic extends BaseMedication {\n  times: string[];\n}\n\nexport type Medication = MedicationContinuous | MedicationPeriodic;\n*/\n",
            "properties": [
                {
                    "name": "categoryId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "executionTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "orderTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "times",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "timingType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ExecutionType",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "MedicationsCategory",
            "id": "interface-MedicationsCategory-8339cb1ebef033e5c77603161a0764f07be3e2e0788196155252fc8298d63d95e500c239f6bcece8b8e67d2d6be5c84eb087c2a20023884ab9fd69e369d32fb7",
            "file": "src/app/shared/models/medications-concentrated-data.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Medication } from '@stories/models/medication.model';\nimport { TimelineResolution } from '@shared/enums/timeline-resolution.enum';\nimport { MedicationsSectionType } from '@shared/enums/medications-section-type.enum';\n\nexport interface MedicationsConcentratedData {\n  title: {\n    fromTime: string;\n    toTime: string;\n  },\n  resolution: TimelineResolution;\n  sections: MedicationsSection[],\n  timeline: MedicationTimeline\n}\n\nexport interface MedicationsSection {\n  id: number;\n  type: MedicationsSectionType;\n  name: string;\n  isDisplay: boolean;\n  categories: MedicationsCategory[];\n}\n\nexport interface MedicationsCategory {\n  id: number;\n  name: string;\n  medications: Medication[]\n}\n\nexport interface MedicationTimeline {\n  range: {\n    fromTime: string;\n    toTime: string;\n  }\n  xAxisValues: string[];\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "medications",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Medication[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "MedicationsConcentratedData",
            "id": "interface-MedicationsConcentratedData-8339cb1ebef033e5c77603161a0764f07be3e2e0788196155252fc8298d63d95e500c239f6bcece8b8e67d2d6be5c84eb087c2a20023884ab9fd69e369d32fb7",
            "file": "src/app/shared/models/medications-concentrated-data.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Medication } from '@stories/models/medication.model';\nimport { TimelineResolution } from '@shared/enums/timeline-resolution.enum';\nimport { MedicationsSectionType } from '@shared/enums/medications-section-type.enum';\n\nexport interface MedicationsConcentratedData {\n  title: {\n    fromTime: string;\n    toTime: string;\n  },\n  resolution: TimelineResolution;\n  sections: MedicationsSection[],\n  timeline: MedicationTimeline\n}\n\nexport interface MedicationsSection {\n  id: number;\n  type: MedicationsSectionType;\n  name: string;\n  isDisplay: boolean;\n  categories: MedicationsCategory[];\n}\n\nexport interface MedicationsCategory {\n  id: number;\n  name: string;\n  medications: Medication[]\n}\n\nexport interface MedicationTimeline {\n  range: {\n    fromTime: string;\n    toTime: string;\n  }\n  xAxisValues: string[];\n}\n",
            "properties": [
                {
                    "name": "resolution",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimelineResolution",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "sections",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MedicationsSection[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "timeline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MedicationTimeline",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "MedicationsSection",
            "id": "interface-MedicationsSection-8339cb1ebef033e5c77603161a0764f07be3e2e0788196155252fc8298d63d95e500c239f6bcece8b8e67d2d6be5c84eb087c2a20023884ab9fd69e369d32fb7",
            "file": "src/app/shared/models/medications-concentrated-data.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Medication } from '@stories/models/medication.model';\nimport { TimelineResolution } from '@shared/enums/timeline-resolution.enum';\nimport { MedicationsSectionType } from '@shared/enums/medications-section-type.enum';\n\nexport interface MedicationsConcentratedData {\n  title: {\n    fromTime: string;\n    toTime: string;\n  },\n  resolution: TimelineResolution;\n  sections: MedicationsSection[],\n  timeline: MedicationTimeline\n}\n\nexport interface MedicationsSection {\n  id: number;\n  type: MedicationsSectionType;\n  name: string;\n  isDisplay: boolean;\n  categories: MedicationsCategory[];\n}\n\nexport interface MedicationsCategory {\n  id: number;\n  name: string;\n  medications: Medication[]\n}\n\nexport interface MedicationTimeline {\n  range: {\n    fromTime: string;\n    toTime: string;\n  }\n  xAxisValues: string[];\n}\n",
            "properties": [
                {
                    "name": "categories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MedicationsCategory[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isDisplay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MedicationsSectionType",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "MedicationTimeline",
            "id": "interface-MedicationTimeline-8339cb1ebef033e5c77603161a0764f07be3e2e0788196155252fc8298d63d95e500c239f6bcece8b8e67d2d6be5c84eb087c2a20023884ab9fd69e369d32fb7",
            "file": "src/app/shared/models/medications-concentrated-data.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Medication } from '@stories/models/medication.model';\nimport { TimelineResolution } from '@shared/enums/timeline-resolution.enum';\nimport { MedicationsSectionType } from '@shared/enums/medications-section-type.enum';\n\nexport interface MedicationsConcentratedData {\n  title: {\n    fromTime: string;\n    toTime: string;\n  },\n  resolution: TimelineResolution;\n  sections: MedicationsSection[],\n  timeline: MedicationTimeline\n}\n\nexport interface MedicationsSection {\n  id: number;\n  type: MedicationsSectionType;\n  name: string;\n  isDisplay: boolean;\n  categories: MedicationsCategory[];\n}\n\nexport interface MedicationsCategory {\n  id: number;\n  name: string;\n  medications: Medication[]\n}\n\nexport interface MedicationTimeline {\n  range: {\n    fromTime: string;\n    toTime: string;\n  }\n  xAxisValues: string[];\n}\n",
            "properties": [
                {
                    "name": "range",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "xAxisValues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Settings",
            "id": "interface-Settings-bdb8d3afe97fd31baa3f66bf560408243dfa2496562d7edb823235a7f2575f9ebff094ade95cd2e42306409dfad46059d15287f366332374188dd940b26c059c",
            "file": "src/stories/models/settings.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Medication } from '@stories/models/medication.model';\nimport { TimelineResolution } from '@shared/enums/timeline-resolution.enum';\n\nexport interface Settings {\n  languageCode: string;\n  resolution: TimelineResolution;\n  pivotTime: string;\n  hoursForward: number;\n  hoursBackward: number;\n  refreshTime: number;\n  sections: [{\n    isDisplay: boolean;\n    medications: Medication[]\n  }];\n}\n",
            "properties": [
                {
                    "name": "hoursBackward",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "hoursForward",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "languageCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "pivotTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "refreshTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "resolution",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimelineResolution",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "sections",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[literal type]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/app/shared/models/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "BaseHorizontalBar",
            "id": "class-BaseHorizontalBar-49f6bfec860975050b0df88ab38a722867c38a0c7922b12a049ac10b7592d4fbcf40575c2c4f0b6da8dbab930e00da39fef9a50a85a1c37827f3192d75c0d9de",
            "file": "src/app/shared/base-classes/base-horizontal-bar.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export abstract class BaseHorizontalBar {\n  readonly FONT_STYLE = 'Rubik';\n  readonly SPLIT_LINE_COLOR = '#eff1f4';\n  readonly BORDER_RADIUS = 10;\n  options;\n\n  setOptions(labels, values, colors) {\n    this.options = this.getOptions(labels, values, colors);\n  }\n\n  getOptions(labels, values, colors) {\n    const options: any = {\n      // title: this.getTitle(title),\n      series: this.getSeries(labels, values, colors),\n      xAxis: this.getXAxis(),\n      yAxis: this.getYAxis(labels),\n      tooltip: this.getTooltip(),\n      grid: {\n        top: '50',\n        bottom: '30',\n        left: '70',\n        right: '25'\n      }\n    };\n    return options;\n  }\n\n  getSeries(labels, values, colors) {\n    return [{\n      type: 'bar',\n      data: values.map((value, i) => ({ value, itemStyle: this.getItemStyle(colors[i]) })),\n      label: {\n        show: false\n      },\n      labelLine: {\n        show: true\n      },\n      barWidth: 13,\n      showBackground: true,\n      backgroundStyle: {\n        color: '#f6f6f7',\n        borderRadius: this.BORDER_RADIUS\n      }\n    }];\n  }\n\n  getXAxis() {\n    return {\n      max: 'dataMax',\n      splitLine: {\n        show: false\n      }\n    };\n  }\n\n  getYAxis(labels) {\n    return {\n      position: 'left',\n      inverse: true,\n      axisLine: {\n        show: false\n      },\n      axisTick: {\n        show: false\n      },\n      splitLine: {  // lines between bars\n        show: true,\n        lineStyle: {\n          color: this.SPLIT_LINE_COLOR\n        }\n      },\n      axisLabel: {\n        margin: 16\n      },\n      type: 'category',\n      data: labels,\n    };\n  }\n\n  getTooltip() {\n    return {\n      trigger: 'item',\n      // formatter: params => `${params.name} ${params.value}`\n      formatter: params => `${params.value}`\n    };\n  }\n\n  getTitle(title) {\n    return title ?  { text: title } : undefined;\n  }\n\n  getItemStyle(color) {\n    return { color, borderRadius: this.BORDER_RADIUS };\n  }\n}\n",
            "properties": [
                {
                    "name": "BORDER_RADIUS",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "FONT_STYLE",
                    "defaultValue": "'Rubik'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "SPLIT_LINE_COLOR",
                    "defaultValue": "'#eff1f4'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getItemStyle",
                    "args": [
                        {
                            "name": "color",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ color: any; borderRadius: number; }",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "color",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOptions",
                    "args": [
                        {
                            "name": "labels",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "values",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "colors",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "labels",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "values",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "colors",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSeries",
                    "args": [
                        {
                            "name": "labels",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "values",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "colors",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "labels",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "values",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "colors",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTitle",
                    "args": [
                        {
                            "name": "title",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ text: any; }",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTooltip",
                    "args": [],
                    "optional": false,
                    "returnType": "{ trigger: string; formatter: (params: any) => string; }",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getXAxis",
                    "args": [],
                    "optional": false,
                    "returnType": "{ max: string; splitLine: { show: boolean; }; }",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getYAxis",
                    "args": [
                        {
                            "name": "labels",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ position: string; inverse: boolean; axisLine: { show: boolean; }; axisTick: { show: boolean; }; splitLine: { show: boolean; lineStyle: { color: string; }; }; axisLabel: { margin: number; }; type: string; data: any; }",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "labels",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setOptions",
                    "args": [
                        {
                            "name": "labels",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "values",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "colors",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "labels",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "values",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "colors",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "BaseGraph",
            "id": "directive-BaseGraph-6cdf78f921af6eaf3898546574190826ccd476514195ab0a1a3eaee482adc9c5aba72bb5cbbb94bdf72b9a98d27dbfe3d65dfef2a6231014579e37a00e3423a8",
            "file": "src/app/shared/base-classes/base-graph.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { GraphMetadata } from '@models/graph-metadata.model';\nimport { GraphData } from '@models/graph-data.model';\nimport * as echarts from 'echarts';\nimport { LinesSeriesOption, TitleComponentOption } from 'echarts/types/dist/echarts';\nimport { AfterViewInit, ChangeDetectorRef, Directive, ElementRef, Input, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\ntype EChartsOption = echarts.EChartsOption;\n// import { axis } from 'echarts/types/dist/echarts';\n// import { XAXisOption } from 'echarts';\n\n@Directive()\nexport abstract class BaseGraph implements OnInit, AfterViewInit {\n  @ViewChild('graphContainer') elRefGraphContainer: ElementRef;\n  @ViewChild('graph') elRefGraph: ElementRef;\n  @Input() metadata: GraphMetadata;\n  @Input() data: GraphData;\n  readonly FONT_STYLE = 'Rubik';\n  readonly SPLIT_LINE_COLOR = '#eff1f4';\n  readonly BORDER_RADIUS = 10;\n  options: echarts.EChartsOption;\n  graph;\n  height;\n\n  protected constructor(private cdr: ChangeDetectorRef, private vcr: ViewContainerRef) {}\n\n  ngOnInit() {\n    this.setGraphHeight();\n    this.options = this.getOptions();\n  }\n\n  ngAfterViewInit() {\n    // const echart = echarts.init(this.elRefGraph.nativeElement);\n    // echart.on('finished', () => {\n    //   console.log('finished ===>');\n    //   // this.setGraphHeight()\n    // });\n    // this.cdr.detectChanges();\n    // this.isAfterViewInit = true;\n\n    // setTimeout(() => this.setGraphHeight(), 0);\n\n  }\n\n  getOptions() {\n    const options: any = {\n      title: this.getTitle(),\n      legend: this.getLegend(),\n      series: this.getSeries(),\n      xAxis: this.getXAxis(),\n      yAxis: this.getYAxis(),\n      tooltip: this.getTooltip(),\n      // grid: this.getGrid(),\n      // height: this.setGraphHeight(),\n      // responsive: true,\n      // maintainAspectRatio: false\n      // radius: [300, 300]\n    };\n    return options;\n  }\n\n  abstract getLegend(): echarts.LegendComponentOption;\n  abstract getSeries(): echarts.LinesSeriesOption['data'] | echarts.PieSeriesOption;\n  abstract getXAxis(): echarts.XAXisComponentOption;\n  abstract getYAxis(): echarts.YAXisComponentOption;\n  abstract getTooltip(): echarts.TooltipComponentOption;\n\n  getTitle(): TitleComponentOption {\n    return this.data.title;\n  }\n\n  getGrid(): echarts.GridComponentOption {\n    return { top: '0', bottom: '0', left: '0', right: '0', containLabel: false }\n  }\n\n  setGraphHeight() {\n    let height;\n    if (typeof this.metadata.height === 'number') {\n      if (this.metadata.height > 0) height = this.metadata.height + 'px';\n    } else if (typeof this.metadata.height === 'string') {\n      if (this.metadata.height !== '100%') {\n        height = this.metadata.height + (this.metadata.height.endsWith('px') ? '' : 'px');\n      }\n    }\n\n//     const printEl = (el, msg) => {\n//       console.log(msg);\n//       console.log('====================================');\n//       // const el = this.elRefGraphContainer.nativeElement;\n//       console.log(el);\n//       const clientHeight = el.clientHeight;\n//       const offsetHeight = el.offsetHeight;\n//       const rect = el.getBoundingClientRect();\n//       const computed = document.defaultView.getComputedStyle(el).height;\n//       const currentStyle = el.currentStyle;\n// console.log('clientHeight:', clientHeight);\n// console.log('offsetHeight:', offsetHeight);\n// console.log('rect:', rect);\n// console.log('computed:', computed);\n// console.log('currentStyle:', currentStyle);\n//     }\n\n    // const el = this.elRefGraphContainer.nativeElement;\n    // printEl(el, 'Element')\n    // const parent1 = el.parentElement;\n    // printEl(parent1, 'parent1')\n    // const parent2 = parent1.parentElement;\n    // printEl(parent2, 'parent2')\n// debugger;\n\n    // console.log('vr:', this.vcr);\n    // console.log('element:', this.vcr.element);\n    // console.log('el:', this.vcr.element.nativeElement);\n    // console.log('height:', height, this.metadata.height);\n\n    this.height = height;\n    return height;\n  }\n  //\n  // getItemStyle(color) {\n  //   return { color, borderRadius: this.BORDER_RADIUS };\n  // }\n}\n",
            "providers": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "GraphData",
                    "decorators": []
                },
                {
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "GraphMetadata",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "BORDER_RADIUS",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "elRefGraph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'graph'"
                        }
                    ]
                },
                {
                    "name": "elRefGraphContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'graphContainer'"
                        }
                    ]
                },
                {
                    "name": "FONT_STYLE",
                    "defaultValue": "'Rubik'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "graph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "echarts.EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "SPLIT_LINE_COLOR",
                    "defaultValue": "'#eff1f4'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getGrid",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.GridComponentOption",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLegend",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.LegendComponentOption",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "getOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSeries",
                    "args": [],
                    "optional": false,
                    "returnType": " | echarts.PieSeriesOption",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "getTitle",
                    "args": [],
                    "optional": false,
                    "returnType": "TitleComponentOption",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTooltip",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.TooltipComponentOption",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "getXAxis",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.XAXisComponentOption",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "getYAxis",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.YAXisComponentOption",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setGraphHeight",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vcr",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "modifierKind": [
                    122
                ],
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "vcr",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-1e5225d017c4a89b9b363417fcde4f459eb2984520a6f56aa7d69faafe53f63eff3638a4b6db6753ee1b042a9fe4862b5ae83489fc196e4f214ad677cc169837",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "graphType",
                    "defaultValue": "GraphType.LinesRegular",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "GraphType",
                    "defaultValue": "GraphType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "mockDataGraphLines",
                    "defaultValue": "mockDataGraphLines",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "mockDataGraphPie",
                    "defaultValue": "mockDataGraphPie",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "title",
                    "defaultValue": "'storybook'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { mockDataGraphLines } from '@stories/mock-data/mock-data-graph-lines.const';\nimport { mockDataGraphPie } from '@stories/mock-data/mock-data-graph-pie.const';\nimport { GraphType } from '@shared/enums/graph-type.enum';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  GraphType = GraphType;\n  title = 'storybook';\n  graphType = GraphType.LinesRegular;\n  mockDataGraphLines = mockDataGraphLines;\n  mockDataGraphPie = mockDataGraphPie;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".buttons {\n  margin: 10px;\n  button {\n    background: #1ea7fd;\n    outline: none;\n    border: none;\n    margin: 20px 20px 30px 20px;\n    width: 100px;\n    height: 30px;\n    cursor: pointer;\n  }\n}\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "\n<div class=\"buttons\">\n  <button (click)=\"graphType=GraphType.LinesRegular\">Linear</button>\n  <button (click)=\"graphType=GraphType.PieRegular\">Pie</button>\n</div>\n\n<div style=\"background: white; display: block; height: 600px\">\n  <app-graph-lines *ngIf=\"graphType===GraphType.LinesRegular\"\n    [data]=\"mockDataGraphLines.data\"\n    [metadata]=\"mockDataGraphLines.metadata\">\n  </app-graph-lines>\n\n  <app-graph-pie *ngIf=\"graphType===GraphType.PieRegular\"\n    [data]=\"mockDataGraphPie.data\"\n    [metadata]=\"mockDataGraphPie.metadata\">\n  </app-graph-pie>\n</div>\n\n\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/app/shared/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "GraphLinesComponent",
            "id": "component-GraphLinesComponent-892b3c7733cc6c8d66690a941523aee7ea2d0bb251d8217129d7e2dc48ba9413c82e184a33dc2042f67d85d7a2d0edf7538961899ad716d122fcec2bab9ed52e",
            "file": "src/app/shared/components/graphs/graph-lines.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-graph-lines",
            "styleUrls": [],
            "styles": [],
            "template": "<div *ngIf=\"options\" #graph echarts class=\"graph-container\" [options]=\"options\" [ngStyle]=\"{height}\" (chartClick)=\"onGraphEvent($event)\"></div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "GraphData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "GraphMetadata",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "BORDER_RADIUS",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "elRefGraph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'graph'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "elRefGraphContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'graphContainer'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "FONT_STYLE",
                    "defaultValue": "'Rubik'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "graph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "echarts.EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "SPLIT_LINE_COLOR",
                    "defaultValue": "'#eff1f4'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getLegend",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.LegendComponentOption",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getSeries",
                    "args": [],
                    "optional": false,
                    "returnType": "",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getTooltip",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.TooltipComponentOption",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getXAxis",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.XAXisComponentOption",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getYAxis",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.YAXisComponentOption",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "onGraphEvent",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getGrid",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.GridComponentOption",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getTitle",
                    "args": [],
                    "optional": false,
                    "returnType": "TitleComponentOption",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "setGraphHeight",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, ViewContainerRef } from '@angular/core';\nimport { BaseGraph } from '../../base-classes/base-graph';\nimport * as echarts from 'echarts';\n\n@Component({\n  selector: 'app-graph-lines',\n  template: `<div *ngIf=\"options\" #graph echarts class=\"graph-container\" [options]=\"options\" [ngStyle]=\"{height}\" (chartClick)=\"onGraphEvent($event)\"></div>`\n})\nexport class GraphLinesComponent extends BaseGraph {\n  constructor(cdr: ChangeDetectorRef, vcr: ViewContainerRef) {\n    super(cdr, vcr);\n  }\n\n  getTooltip(): echarts.TooltipComponentOption {\n    return { trigger: 'axis' };\n  }\n  getLegend(): echarts.LegendComponentOption {\n    return this.data.legend;\n  }\n\n  getSeries(): echarts.LinesSeriesOption['data'] {\n    return this.data.series.data.map(item => ({ ...item, type: 'line', stack: 'Total' }));\n  }\n\n  override getXAxis(): echarts.XAXisComponentOption {\n    return {\n      type: 'category',\n      boundaryGap: false,\n      data: this.data.xAxis.data\n    };\n  }\n\n  override getYAxis(): echarts.YAXisComponentOption {\n    return {\n      type: 'value'\n    };\n  }\n\n  onGraphEvent(e) {\n    console.log(e);\n    const str = `line: ${e.seriesName}, column: ${e.name}, value: ${e.value}`;\n    alert(str);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vcr",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "vcr",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseGraph"
        },
        {
            "name": "GraphPieComponent",
            "id": "component-GraphPieComponent-b5c5db65f9b00b00d67f7c5cb0b4fc6c4dfe36cb9e6aa1b011312cd55450704aaf1dc74d2c2f9f26cacc7134d5f7faaf94b266c6610ee6e03ce36d343de9ccc6",
            "file": "src/app/shared/components/graphs/graph-pie.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-graph-pie",
            "styleUrls": [],
            "styles": [],
            "template": "<div *ngIf=\"options\" #graph echarts class=\"graph-container\" [options]=\"options\" [ngStyle]=\"{height}\"></div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "GraphData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "GraphMetadata",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "BORDER_RADIUS",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "elRefGraph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'graph'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "elRefGraphContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'graphContainer'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "FONT_STYLE",
                    "defaultValue": "'Rubik'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "graph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "echarts.EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "SPLIT_LINE_COLOR",
                    "defaultValue": "'#eff1f4'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getItemStyle",
                    "args": [],
                    "optional": false,
                    "returnType": "{ label: { show: boolean; position: string; formatter: (params: any) => string; textStyle: { fontSize: string; fontWeight: string; }; }; labelLine: { show: boolean; }; emphasis: { label: { show: boolean; position: string; }; }; }",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLegend",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.LegendComponentOption",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getSeries",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getTooltip",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.TooltipComponentOption",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getXAxis",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.XAXisComponentOption",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getYAxis",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.YAXisComponentOption",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getGrid",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.GridComponentOption",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getTitle",
                    "args": [],
                    "optional": false,
                    "returnType": "TitleComponentOption",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "setGraphHeight",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, ViewContainerRef } from '@angular/core';\nimport { BaseGraph } from '../../base-classes/base-graph';\nimport * as echarts from 'echarts';\nimport { GraphSeriesDataPie } from '@models/graph-data.model';\n\n@Component({\n  selector: 'app-graph-pie',\n  template: `<div *ngIf=\"options\" #graph echarts class=\"graph-container\" [options]=\"options\" [ngStyle]=\"{height}\"></div>`\n})\nexport class GraphPieComponent extends BaseGraph {\n  constructor(cdr: ChangeDetectorRef, vcr: ViewContainerRef) {\n    super(cdr, vcr);\n  }\n\n  getTooltip(): echarts.TooltipComponentOption {\n    return undefined;  // { trigger: 'axis' };\n  }\n\n  getLegend(): echarts.LegendComponentOption {\n    return undefined;  // this.data.legend;\n  }\n\n  // getSeries(): echarts.PieSeriesOption {\n  getSeries(): any {\n    // const itemStyle = this.getItemStyle();\n    return [{ type: 'pie', data: this.data.series.data as GraphSeriesDataPie }];  //     this.data.series.map(item => ({ ...item, type: 'pie' }));\n  }\n\n  override getXAxis(): echarts.XAXisComponentOption {\n    return undefined;\n  }\n\n  override getYAxis(): echarts.YAXisComponentOption {\n    return undefined;\n  }\n\n  getItemStyle() {\n    return {\n      label: {\n        show: true,\n        position: 'inner',\n        formatter: function (params) {\n          return  params.value + '%\\n'\n        },\n        textStyle: {\n          fontSize: '30',\n          fontWeight: 'bold'\n        }\n      },\n      labelLine: {\n        show: true\n      },\n      emphasis: {\n        label: {\n          show: true,\n            position: 'center',\n        }\n      }\n    }\n  }\n  //\n  // getItemStyle() {\n  //   return {\n  //     normal : {\n  //       label : {\n  //         show: true, position: 'inner',\n  //           formatter : function (params){\n  //           return  params.value + '%\\n'\n  //         },\n  //       },\n  //       labelLine : {\n  //         show : true\n  //       }\n  //     },\n  //     emphasis : {\n  //       label : {\n  //         show : true,\n  //           position : 'center',\n  //           textStyle : {\n  //           fontSize : '30',\n  //             fontWeight : 'bold'\n  //         }\n  //       }\n  //     }\n  //   }\n  // }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vcr",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "vcr",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseGraph"
        },
        {
            "name": "GraphTimelineCategoryComponent",
            "id": "component-GraphTimelineCategoryComponent-7d24c862cb262b85735747569ccef2e57ac4f62d916299658e76e4b23ef77eb232bb7b144ff0fe4fe0ec93116d076117148231fef2ea287a985298e6b3677f37",
            "file": "src/app/shared/components/graphs/graph-timeline-category.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-graph-timeline-category",
            "styleUrls": [],
            "styles": [],
            "template": "<div *ngIf=\"options\" #graph echarts class=\"graph-container\" [options]=\"options\" [ngStyle]=\"{height}\" (chartClick)=\"onGraphEvent($event)\"></div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "GraphData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "GraphMetadata",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "BORDER_RADIUS",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "elRefGraph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'graph'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "elRefGraphContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'graphContainer'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "FONT_STYLE",
                    "defaultValue": "'Rubik'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "graph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "echarts.EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "SPLIT_LINE_COLOR",
                    "defaultValue": "'#eff1f4'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getLegend",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.LegendComponentOption",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getSeries",
                    "args": [],
                    "optional": false,
                    "returnType": "",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getTooltip",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.TooltipComponentOption",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getXAxis",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.XAXisComponentOption",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getYAxis",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.YAXisComponentOption",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "onGraphEvent",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getGrid",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.GridComponentOption",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getTitle",
                    "args": [],
                    "optional": false,
                    "returnType": "TitleComponentOption",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "setGraphHeight",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, ViewContainerRef } from '@angular/core';\nimport { BaseGraph } from '../../base-classes/base-graph';\nimport * as echarts from 'echarts';\n\n@Component({\n  selector: 'app-graph-timeline-category',\n  template: `<div *ngIf=\"options\" #graph echarts class=\"graph-container\" [options]=\"options\" [ngStyle]=\"{height}\" (chartClick)=\"onGraphEvent($event)\"></div>`\n})\nexport class GraphTimelineCategoryComponent extends BaseGraph {\n  constructor(cdr: ChangeDetectorRef, vcr: ViewContainerRef) {\n    super(cdr, vcr);\n  }\n\n  getTooltip(): echarts.TooltipComponentOption {\n    return { trigger: 'axis' };\n  }\n  getLegend(): echarts.LegendComponentOption {\n    return this.data.legend;\n  }\n\n  getSeries(): echarts.LinesSeriesOption['data'] {\n    return this.data.series.data.map(item => ({ ...item, type: 'line', stack: 'Total' }));\n  }\n\n  override getXAxis(): echarts.XAXisComponentOption {\n    return {\n      type: 'category',\n      boundaryGap: false,\n      data: this.data.xAxis.data\n    };\n  }\n\n  override getYAxis(): echarts.YAXisComponentOption {\n    return {\n      type: 'value'\n    };\n  }\n\n  onGraphEvent(e) {\n    console.log(e);\n    const str = `line: ${e.seriesName}, column: ${e.name}, value: ${e.value}`;\n    alert(str);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vcr",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "vcr",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseGraph"
        },
        {
            "name": "GraphTimelineComponent",
            "id": "component-GraphTimelineComponent-cc0b5b22174100e1ca211110e9b54d453014df2bf49c9799d1a6f5c7d6bbd0a542f6d16e80e51fc15cf544235d46d907c004d4c0d851eb42a32484396e634953",
            "file": "src/app/shared/components/graphs/graph-timeline.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-graph-timeline",
            "styleUrls": [],
            "styles": [],
            "template": "<div *ngIf=\"options\" #graph echarts class=\"graph-container\" [options]=\"options\" [ngStyle]=\"{height}\" (chartClick)=\"onGraphEvent($event)\"></div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "GraphData",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "GraphMetadata",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "BORDER_RADIUS",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "elRefGraph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'graph'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "elRefGraphContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'graphContainer'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "FONT_STYLE",
                    "defaultValue": "'Rubik'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "graph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "echarts.EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "SPLIT_LINE_COLOR",
                    "defaultValue": "'#eff1f4'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getLegend",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.LegendComponentOption",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getSeries",
                    "args": [],
                    "optional": false,
                    "returnType": "",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getTooltip",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.TooltipComponentOption",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getXAxis",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.XAXisComponentOption",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getYAxis",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.YAXisComponentOption",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "onGraphEvent",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getGrid",
                    "args": [],
                    "optional": false,
                    "returnType": "echarts.GridComponentOption",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "getTitle",
                    "args": [],
                    "optional": false,
                    "returnType": "TitleComponentOption",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                },
                {
                    "name": "setGraphHeight",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseGraph"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, ViewContainerRef } from '@angular/core';\nimport { BaseGraph } from '../../base-classes/base-graph';\nimport * as echarts from 'echarts';\n\n@Component({\n  selector: 'app-graph-timeline',\n  template: `<div *ngIf=\"options\" #graph echarts class=\"graph-container\" [options]=\"options\" [ngStyle]=\"{height}\" (chartClick)=\"onGraphEvent($event)\"></div>`\n})\nexport class GraphTimelineComponent extends BaseGraph {\n  constructor(cdr: ChangeDetectorRef, vcr: ViewContainerRef) {\n    super(cdr, vcr);\n  }\n\n  getTooltip(): echarts.TooltipComponentOption {\n    return { trigger: 'axis' };\n  }\n  getLegend(): echarts.LegendComponentOption {\n    return this.data.legend;\n  }\n\n  getSeries(): echarts.LinesSeriesOption['data'] {\n    return this.data.series.data.map(item => ({ ...item, type: 'line', stack: 'Total' }));\n  }\n\n  override getXAxis(): echarts.XAXisComponentOption {\n    return {\n      type: 'category',\n      boundaryGap: false,\n      data: this.data.xAxis.data\n    };\n  }\n\n  override getYAxis(): echarts.YAXisComponentOption {\n    return {\n      type: 'value'\n    };\n  }\n\n  onGraphEvent(e) {\n    console.log(e);\n    const str = `line: ${e.seriesName}, column: ${e.name}, value: ${e.value}`;\n    alert(str);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vcr",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "vcr",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseGraph"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-ced03811a868a019668bbd072c79a5fd7d7d97b8424ea4476860b35c31731ce06430905dbf6f81e0ca830fc11065ce2bf13a6a834c7aa52a64b34ae66a6f0023",
            "file": "src/app/shared/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from '@models/user.model';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "MedicationGraphComponent",
            "id": "component-MedicationGraphComponent-cecefec37ff8fcfe09c9b3fa3c9dfb5b1715bfcaae9a7996173a379a876ccada7ccec130eb8cf7caec40b6d4c68834a265db814118739680b4a68145c8ce2bc8",
            "file": "src/app/shared/components/system/medication-graph/medication-graph.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-medication-graph",
            "styleUrls": [
                "./medication-graph.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./medication-graph.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isCondensedCategory",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "medication",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Medication",
                    "decorators": []
                },
                {
                    "name": "medicationNameWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "timeline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "MedicationTimeline",
                    "decorators": []
                },
                {
                    "name": "timelineWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "elRefGraphLine",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'graphLine'"
                        }
                    ]
                },
                {
                    "name": "elRefName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'name'"
                        }
                    ]
                },
                {
                    "name": "parts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { Medication } from '@stories/models/medication.model';\nimport { MedicationTimeline } from '@models/medications-concentrated-data.model';\n\n@Component({\n  selector: 'app-medication-graph',\n  templateUrl: './medication-graph.component.html',\n  styleUrls: ['./medication-graph.component.scss']\n})\nexport class MedicationGraphComponent implements OnInit {\n  @ViewChild('graphLine') elRefGraphLine;\n  @ViewChild('name') elRefName;\n  @Input() medication: Medication;\n  @Input() timeline: MedicationTimeline;\n  @Input() medicationNameWidth: number;\n  @Input() timelineWidth: number;\n  @Input() isCondensedCategory = false;\n  parts;\n\n  constructor(private renderer: Renderer2) {}\n\n  ngOnInit() {\n    this.parts = this.timeline.xAxisValues.length - 1;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'variables';\n\n.graph-line {\n  display: flex;\n  align-items: center;\n  height: $medication-graph-height;\n\n  .graph-container {\n    position: relative;\n    .graph {\n      border-top: 1px solid gray;\n      border-right: 1px solid gray;\n      border-left: 1px solid gray;\n      //border-bottom: 1px solid gray;\n      height: 100%;\n      flex-grow: 1;\n      display: flex;\n      align-items: center;\n      &.section-graph-odd {\n        background: white;\n      }\n      &.section-graph-even {\n        background: #eeeeee;\n      }\n      &.last-section-graph {\n        border-bottom: 1px solid gray;\n      }\n    }\n  }\n}\n\n.vertical-lines-container {\n  display: flex;\n  width: 100%;\n  justify-content: space-evenly;\n  .vertical-lines-part-container {\n    display: block;\n    width: 100%;\n    height: $medication-graph-height;\n    position: relative;\n    &:not(:last-child) {\n      border-right: 1px solid black;\n    }\n    .x-axis-footer-value {\n      position: absolute;\n      left: -1rem;\n      bottom: -2rem;\n    }\n  }\n}\n",
                    "styleUrl": "./medication-graph.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"graph-line\" #graphLine>\n  <div class=\"name\" #name [style.width.px]=\"medicationNameWidth\">\n    <ng-container *ngIf=\"!isCondensedCategory\">\n      {{medication.name}}\n    </ng-container>\n  </div>\n\n  <div class=\"graph-container\" [style.width.px]=\"timelineWidth\">\n    <div class=\"graph\">\n      <div class=\"vertical-lines-container\">\n        <ng-container *ngFor=\"let part of [].constructor(parts); let i=index\">\n          <ng-container\n              [ngTemplateOutlet]=\"verticalLines\"\n              [ngTemplateOutletContext]=\"{isLast: i===parts, value: timeline.xAxisValues[i]}\"\n          ></ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #verticalLines let-isLast=\"isLast\" let-value=\"value\" >\n  <div class=\"vertical-lines-part-container\">\n    <div class=\"vertical-lines-part\"></div>\n    <div *ngIf=\"isLast\" class=\"x-axis-footer-value\">{{value}}</div>\n  </div>\n</ng-template>\n"
        },
        {
            "name": "MedicationListerComponent",
            "id": "component-MedicationListerComponent-c20f3659f8d92111b0b26f5c9aba526817360d04b056dc284bc54891283eb888acfd5331b3a45017e6c481be464609f0971f6c34528b842d974ede087e226ebc",
            "file": "src/stories/components/medication-lister/medication-lister.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-medication-lister",
            "styleUrls": [
                "./medication-lister.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./medication-lister.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "medications",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "change",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "deleteMedication",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isAfterViewInit",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "medications$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClickAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDeleteMedication",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { distinct, debounceTime, skip } from 'rxjs/operators';\nimport { Medication } from '@stories/models/medication.model';\n\n@Component({\n  selector: 'app-medication-lister',\n  templateUrl: './medication-lister.component.html',\n  styleUrls: ['./medication-lister.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MedicationListerComponent implements AfterViewInit, OnDestroy {\n  @Input() medications;\n  @Output() change = new EventEmitter();\n  @Output() deleteMedication = new EventEmitter<number>();\n  medications$ = new Subject();\n  subscription: Subscription;\n  isAfterViewInit = false;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    this.isAfterViewInit = true;\n    this.subscription = this.medications$.pipe(\n      debounceTime(200),\n      distinct()\n    ).subscribe(value => {\n      this.change.emit(value);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription && !this.subscription.closed) this.subscription.unsubscribe();\n  }\n\n  onChange(value) {\n    if (this.isAfterViewInit) this.medications$.next(value);\n    if (this.isAfterViewInit) console.log('onChange:', value, ', isAfterViewInit:', this.isAfterViewInit);\n  }\n\n  onClickAdd() {\n    const medication: Medication = {\n      id: 0,\n      name: '',\n      categoryId: 0,\n      type: undefined,\n      timingType: undefined,\n      orderTime: 0,\n      executionTime: 0,\n      duration: 0,\n      times: ['', '', '']\n    };\n    this.medications.unshift(medication);\n    this.medications = [...this.medications];\n    this.onChange(this.medications);\n    this.cdr.detectChanges();\n  }\n\n  onDeleteMedication(id) {\n    this.deleteMedication.emit(id);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".medication-table {\n   background: #f0f0f0;\n  //height: 100px;\n  display: block;\n  list-style: none;\n  padding: 0; /* Remove padding */\n  margin: 0.5rem 0 0 0; /* Remove margins */\n}\n\n.add-button {\n  padding: 0 0.5rem;\n  font-size: 0.8rem;\n  margin-inline-start: 2rem;\n}\n",
                    "styleUrl": "./medication-lister.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "templateData": "<div>\n  <span>Medications: {{medications.length}}</span>\n  <button (click)=\"onClickAdd()\" type=\"button\" class=\"btn btn-success add-button\">ADD</button>\n</div>\n\n\n<ng-template #itemTemplate let-medication=\"item\" let-index=\"index\">\n  <app-medication-lister-item\n      [medication]=\"medication.value\"\n      [index]=\"index\"\n      (delete)=\"onDeleteMedication($event)\"\n  ></app-medication-lister-item>\n</ng-template>\n\n<div class=\"medication-table\">\n  <bs-sortable\n      [(ngModel)]=\"medications\"\n      [itemTemplate]=\"itemTemplate\"\n      (onChange)=\"onChange($event)\"\n      itemClass=\"sortable-item\"\n      itemActiveClass=\"sortable-item-active\"\n      placeholderItem=\"\"\n      placeholderClass=\"placeholderStyle text-center\"\n      wrapperClass=\"sortable-wrapper\"\n  ></bs-sortable>\n</div>\n"
        },
        {
            "name": "MedicationListerItemComponent",
            "id": "component-MedicationListerItemComponent-d3c46c7dfc2de3ddd6b2599abbf1cef3e3b68a0f5ec358118cce04932b30310d063888ed32dcd31142cf6997a55214dd587137e6f71f71ec513e11a50e412cfb",
            "file": "src/stories/components/medication-lister-item/medication-lister-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-medication-lister-item",
            "styleUrls": [
                "./medication-lister-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./medication-lister-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "medication",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Medication",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "delete",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "categoryMedications",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "ExecutionType",
                    "defaultValue": "ExecutionType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "MedicationCategories",
                    "defaultValue": "MedicationCategories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "medications",
                    "defaultValue": "medications",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChangeCategory",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onChangeMedication",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onChangeTime",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "i",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClickDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setCategoryMedication",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "stopPropagation",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Medication } from '@stories/models/medication.model';\nimport { MedicationCategories } from '@stories/const/medication-categories.const';\nimport { medications } from '@stories/const/medications.const';\nimport { ExecutionType } from '@stories/enums/execution-type.enum';\n\n@Component({\n  selector: 'app-medication-lister-item',\n  templateUrl: './medication-lister-item.component.html',\n  styleUrls: ['./medication-lister-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MedicationListerItemComponent implements OnInit {\n  @Input() medication: Medication;\n  @Input() index: number;\n  @Output() delete = new EventEmitter<number>()\n  MedicationCategories = MedicationCategories;\n  medications = medications;\n  ExecutionType = ExecutionType;\n  categoryMedications = [];\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.setCategoryMedication();\n  }\n\n  onChangeCategory(e) {\n    const categoryId = Number(e.target.value);\n    if (categoryId !== this.medication.categoryId) {\n      this.medication.categoryId = Number(e.target.value);\n      this.medication.id = 0;\n      this.setCategoryMedication();\n    }\n    e.stopPropagation();\n  }\n\n  onChangeMedication(e) {\n    this.medication.id = Number(e.target.value);\n    this.medication.name = this.medications.find(medication => medication.id === this.medication.id).name;\n    e.stopPropagation();\n  }\n\n  stopPropagation(e) {\n    e.stopPropagation();\n  }\n\n  setCategoryMedication() {\n    this.categoryMedications = this.medications.filter(medication => medication.categoryId === this.medication.categoryId);\n  }\n\n  onChangeTime(e, i) {\n    this.stopPropagation(e);\n    setTimeout(() => {\n      this.medication.times[i] = e.target.value;\n    });\n  }\n\n\n  onClickDelete() {\n    let isConfirm = false;\n    const item = this.medications.find(medication => medication.id === this.medication.id);\n    if (item) isConfirm = confirm(`are you sure you want to delete \"${item.name}\"?`);\n    if (!item || isConfirm) {\n      this.delete.emit(this.medication.id);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$border-color: #aaaaaa;\n\n.medication-row {\n  //padding-inline: 1rem;\n  //background: brown;\n  padding-inline: 1rem;\n  border: 1px solid $border-color;\n  border-top: none;\n  padding: 6px;\n  display: flex;\n  align-items: center;\n  &.first {\n    border-top: 1px solid $border-color;\n  }\n  .medication {\n    flex-grow: 1;\n  }\n  .delete {\n    width: 2rem;\n    display: block;\n    text-align: right;\n  }\n}\n\n.prop {\n  display: inline-flex;\n  align-items: center;\n  margin-inline-end: 2rem;\n  .label {\n    margin-inline-end: 0.6rem;\n  }\n  > input {\n    width: 5rem;\n  }\n}\n\n.category {\n  //background: cyan;\n}\n",
                    "styleUrl": "./medication-lister-item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"medication-row\" [class.first]=\"index===0\">\n  <div class=\"medication\">\n    <div class=\"prop category\">\n      <span class=\"label\">Category</span>\n      <select [(ngModel)]=\"medication.categoryId\" (change)=\"onChangeCategory($event)\">\n        <option *ngFor=\"let option of MedicationCategories\" [value]=\"option.id\">{{option.label}}</option>\n      </select>\n    </div>\n\n    <div class=\"prop medication\">\n      <span class=\"label\">Medication</span>\n      <select [ngModel]=\"medication.id\" (change)=\"onChangeMedication($event)\">\n        <option *ngFor=\"let item of categoryMedications\" [value]=\"item.id\">{{item.name}}</option>\n      </select>\n    </div>\n\n    <div class=\"prop execution\">\n      <span class=\"label\">Type</span>\n      <select [(ngModel)]=\"medication.type\" (change)=\"stopPropagation($event)\">\n        <option [value]=\"ExecutionType.Continuous\">Continuous</option>\n        <option [value]=\"ExecutionType.Periodic\">Periodic</option>\n      </select>\n    </div>\n\n\n    <!--     C O N T I N U O U S     -->\n    <ng-container *ngIf=\"medication.type===ExecutionType.Continuous\">\n      <div class=\"prop\">\n        <span class=\"label\">Relative minutes:</span>\n      </div>\n\n      <div class=\"prop\">\n        <span class=\"label\">Order Time</span>\n        <input type=\"text\" [(ngModel)]=\"medication.orderTime\" (change)=\"stopPropagation($event)\">\n      </div>\n\n      <div class=\"prop\">\n        <span class=\"label\">Execution Time</span>\n        <input type=\"number\" [(ngModel)]=\"medication.executionTime\" (change)=\"stopPropagation($event)\">\n      </div>\n\n      <div class=\"prop\">\n        <span class=\"label\">Duration</span>\n        <input type=\"number\" [(ngModel)]=\"medication.duration\" (change)=\"stopPropagation($event)\">\n      </div>\n    </ng-container>\n\n\n    <!--     P E R I O D I C     -->\n    <ng-container *ngIf=\"medication.type===ExecutionType.Periodic\">\n      <div class=\"prop periodic\">\n        <span class=\"label\">Times</span>\n\n        <!-- not using *ngFor b/c bootstrap sortable throws error when -->\n        <!-- typing in input field since it is not designed for typing -->\n        <input type=\"text\" [value]=\"medication.times[0]\"\n               (change)=\"onChangeTime($event, 0)\"\n               (keydown)=\"onChangeTime($event, 0)\"\n               (paste)=\"onChangeTime($event, 0)\"\n        >\n        <input type=\"text\" [value]=\"medication.times[1]\"\n               (change)=\"onChangeTime($event, 1)\"\n               (keydown)=\"onChangeTime($event, 1)\"\n               (paste)=\"onChangeTime($event, 1)\"\n        >\n        <input type=\"text\" [value]=\"medication.times[2]\"\n               (change)=\"onChangeTime($event, 2)\"\n               (keydown)=\"onChangeTime($event, 2)\"\n               (paste)=\"onChangeTime($event, 2)\"\n        >\n      </div>\n    </ng-container>\n  </div>\n\n  <div class=\"delete\">\n    <i class=\"bi bi-trash\" (click)=\"onClickDelete()\"></i>\n  </div>\n</div>\n"
        },
        {
            "name": "MedicationsCategoryComponent",
            "id": "component-MedicationsCategoryComponent-139055357367aeab19a6ae3f16f8c936049b54126405efac71aa7d5e15d70b3b41e0d25dba64711fe8689e8df421bd6fbc60ef7975d13f22f990ba594bc87d0c",
            "file": "src/app/shared/components/system/medications-category/medications-category.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-medications-category",
            "styleUrls": [
                "./medications-category.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./medications-category.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "MedicationsCategory",
                    "decorators": []
                },
                {
                    "name": "preTimelineWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "timeline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "MedicationTimeline",
                    "decorators": []
                },
                {
                    "name": "timelineWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "backgroundColored",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                },
                {
                    "name": "expandCondense",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "expandIconWidth",
                    "defaultValue": "15",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "frameWidth",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "medicationNameWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "emitExpandCondense",
                    "args": [
                        {
                            "name": "isExpanded",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isExpanded",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickCondense",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickExpand",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MedicationsCategory, MedicationTimeline } from '@models/medications-concentrated-data.model';\n\n@Component({\n  selector: 'app-medications-category',\n  templateUrl: './medications-category.component.html',\n  styleUrls: ['./medications-category.component.scss']\n})\nexport class MedicationsCategoryComponent implements OnInit {\n  @Input() category: MedicationsCategory;\n  @Input() timeline: MedicationTimeline;\n  @Input() preTimelineWidth = 0;\n  @Input() timelineWidth = 0;\n  @Output() expandCondense = new EventEmitter();\n  @Output() backgroundColored = new EventEmitter();\n  readonly expandIconWidth = 15;\n  readonly frameWidth = 10;\n  medicationNameWidth;\n  isExpanded = true;\n\n  ngOnInit() {\n    this.medicationNameWidth = this.preTimelineWidth - this.expandIconWidth - this.frameWidth;\n  }\n\n  onClickExpand() {\n    this.emitExpandCondense(true);\n  }\n\n  onClickCondense() {\n    this.emitExpandCondense(false);\n  }\n\n  emitExpandCondense(isExpanded) {\n    this.isExpanded = isExpanded;\n    setTimeout(() => this.expandCondense.emit());  // timeout b/c dom hasn't changed yet\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'variables';\n\n.category {\n  display: flex;\n  align-items: center;\n\n  .expand-icon {\n    display: inline-block;\n  }\n\n  .frame {\n    width: 10px;\n    display: block;\n    border: none;\n    min-height: $medication-graph-height;\n    box-shadow: inset 0 0 0 1px white, inset -1px 0 0 1px white, inset 0 0 0 2px black;\n    z-index: 2;\n    .frame-line-filler {\n      display: flex;\n      flex-direction: column;\n      height: $medication-graph-height;\n    }\n  }\n\n  .medication {\n    flex-grow: 1;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    min-height: $medication-graph-height;\n    z-index: 1;\n    .medication-container {\n      width: 100%;\n      height: $medication-graph-height;\n    }\n  }\n}\n",
                    "styleUrl": "./medications-category.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"category\">\n  <div class=\"expand-icon\" [style.width.px]=\"expandIconWidth\">\n    <i class=\"bi bi-plus\" *ngIf=\"!isExpanded\" (click)=\"onClickExpand()\"></i>\n    <i class=\"bi bi-dash\" *ngIf=\"isExpanded\" (click)=\"onClickCondense()\"></i>\n  </div>\n\n  <div class=\"frame\" [style.width.px]=\"frameWidth\">\n    <ng-container *ngIf=\"isExpanded\">\n      <div *ngFor=\"let medication of category.medications\" class=\"frame-line-filler\"></div>\n    </ng-container>\n  </div>\n\n  <div class=\"medication\" [style.width.px]=\"medicationNameWidth + timelineWidth\">\n    <ng-container *ngIf=\"!isExpanded\">\n      <app-medication-graph\n          [isCondensedCategory]=\"true\"\n          [timeline]=\"timeline\"\n          [medicationNameWidth]=\"medicationNameWidth\"\n          [timelineWidth]=\"timelineWidth\"\n      ></app-medication-graph>\n    </ng-container>\n    <ng-container *ngIf=\"isExpanded\">\n      <div *ngFor=\"let medication of category.medications; let i=index\" class=\"medication-container\">\n        <app-medication-graph\n            [medication]=\"medication\"\n            [timeline]=\"timeline\"\n            [medicationNameWidth]=\"medicationNameWidth\"\n            [timelineWidth]=\"timelineWidth\"\n        ></app-medication-graph>\n      </div>\n    </ng-container>\n  </div>\n</div>\n"
        },
        {
            "name": "MedicationsConcentratedComponent",
            "id": "component-MedicationsConcentratedComponent-4aa0ad4190f77547fa24351cf36dbb429c2929a81e2417ed8f602dce724138ec034976bbd19e3254d3a762a9b33ee3beb1a11023b8ac79012c4349f9c90bedb9",
            "file": "src/app/shared/components/system/medications-concentrated/medications-concentrated.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-medications-concentrated",
            "styleUrls": [
                "./medications-concentrated.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./medications-concentrated.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "MedicationsConcentratedData",
                    "decorators": []
                },
                {
                    "name": "direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Direction",
                    "decorators": []
                },
                {
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "GraphMetadata",
                    "decorators": []
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "resolution",
                    "defaultValue": "new EventEmitter<TimelineResolution>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "elContent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'content'"
                        }
                    ]
                },
                {
                    "name": "preTimelineWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "TIMELINE_WIDTH_PCT",
                    "defaultValue": "0.8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "TIMELINE_WIDTH_REDUCTION_PCT",
                    "defaultValue": "0.95",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "timelineWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChangeResolution",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setTimelineWidth",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { GraphMetadata } from '@models/graph-metadata.model';\nimport { Direction } from '@stories/models/direction.model';\nimport { TimelineResolution } from '@shared/enums/timeline-resolution.enum';\nimport { MedicationsConcentratedData } from '@models/medications-concentrated-data.model';\n\n@Component({\n  selector: 'app-medications-concentrated',\n  templateUrl: './medications-concentrated.component.html',\n  styleUrls: ['./medications-concentrated.component.scss']\n})\nexport class MedicationsConcentratedComponent implements AfterViewInit {\n  @ViewChild('content') elContent: ElementRef;\n  @Input() direction: Direction;\n  @Input() text: any;\n  @Input() metadata: GraphMetadata;\n  @Input() data: MedicationsConcentratedData;\n  @Output() resolution = new EventEmitter<TimelineResolution>();\n  readonly TIMELINE_WIDTH_PCT = 0.8;  // total width for graph on the right side - 80%\n  readonly TIMELINE_WIDTH_REDUCTION_PCT = 0.95;  // take off 5% to display the right most hour\n  preTimelineWidth = 0;\n  timelineWidth = 0;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngAfterViewInit() {\n    this.setTimelineWidth();\n  }\n\n  setTimelineWidth() {\n    const contentWidth = this.elContent.nativeElement.offsetWidth;\n    const timelineWidth = Math.floor(contentWidth * this.TIMELINE_WIDTH_PCT);\n    this.preTimelineWidth = contentWidth - timelineWidth;\n    this.timelineWidth =  Math.floor(timelineWidth * this.TIMELINE_WIDTH_REDUCTION_PCT);\n    this.cdr.detectChanges();\n  }\n\n  onChangeResolution() {\n    this.resolution.emit(this.data.resolution);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".content {\n  display: block;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    height: 3rem;\n    align-items: center;\n    padding-inline: 1rem;\n    .resolution {\n      > select {\n        margin-inline-start: 0.5rem;\n      }\n    }\n    .print {\n      font-size: 2rem;\n    }\n    &.sub-header {\n      background: #eeeeee;\n    }\n  }\n\n  .sections {\n    :not(:last-child) {\n      margin-bottom: 1.5rem;\n    }\n    app-medications-section {\n      display: block;\n    }\n  }\n }\n\n",
                    "styleUrl": "./medications-concentrated.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div #content class=\"content\">\n  <div class=\"header\">\n    <div class=\"action\">\n      <i class=\"bi bi-printer print\"></i>\n    </div>\n    <div class=\"title\">\n      {{data.title.fromTime}}&nbsp; -&nbsp; {{data.title.toTime}}\n    </div>\n    <div class=\"resolution\" [dir]=\"direction\">\n      <span>{{text.resolution.label}}</span>\n      <select [(ngModel)]=\"data.resolution\" (change)=\"onChangeResolution()\">\n        <option *ngFor=\"let option of text.resolution.options\" [value]=\"option.value\">{{option.label}}</option>\n      </select>\n    </div>\n  </div>\n\n  <div class=\"header sub-header\">\n    <div>{{text.medicationsConcentrated.legend}}</div>\n    <div>{{text.medicationsConcentrated.title}}</div>\n    <div></div>\n  </div>\n\n  <div *ngIf=\"timelineWidth\" #sections class=\"sections\">\n    <app-medications-section-container *ngFor=\"let section of data.sections\"\n      [section]=\"section\"\n      [timeline]=\"data.timeline\"\n      [preTimelineWidth]=\"preTimelineWidth\"\n      [timelineWidth]=\"timelineWidth\">\n    </app-medications-section-container>\n  </div>\n</div>\n\n"
        },
        {
            "name": "MedicationsSectionContainerComponent",
            "id": "component-MedicationsSectionContainerComponent-d2a0f0229c2e02b49dc8acc11a7417f19f071b45f0ddef3f884d5b3308ad7d7acfe1f5f3913b7e812326c3f492d8544c99d68d230923457fbe21cb19aeade30a",
            "file": "src/app/shared/components/system/medications-section-container/medications-section-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-medications-section-container",
            "styleUrls": [
                "./medications-section-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./medications-section-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "preTimelineWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "section",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "MedicationsSection",
                    "decorators": []
                },
                {
                    "name": "timeline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "MedicationTimeline",
                    "decorators": []
                },
                {
                    "name": "timelineWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "elRefCategories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'categories'"
                        }
                    ]
                },
                {
                    "name": "MedicationsSectionType",
                    "defaultValue": "MedicationsSectionType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "timelineValuesRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "timelineValuesWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setCategoriesBackgroundColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, QueryList, Renderer2, ViewChild, ViewChildren } from '@angular/core';\nimport { MedicationsSection, MedicationTimeline } from '@models/medications-concentrated-data.model';\nimport { MedicationsSectionType } from '@shared/enums/medications-section-type.enum';\n\n@Component({\n  selector: 'app-medications-section-container',\n  templateUrl: './medications-section-container.component.html',\n  styleUrls: ['./medications-section-container.component.scss']\n})\nexport class MedicationsSectionContainerComponent implements OnInit {\n  @ViewChild('categories') elRefCategories: ElementRef;\n  @Input() section: MedicationsSection;\n  @Input() timeline: MedicationTimeline;\n  @Input() preTimelineWidth = 0;\n  @Input() timelineWidth = 0;\n  MedicationsSectionType = MedicationsSectionType;\n  timelineValuesWidth;\n  timelineValuesRight;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    const valueWidth = this.timelineWidth / 12;\n    this.timelineValuesWidth = valueWidth * this.timeline.xAxisValues.length;\n    this.timelineValuesRight = -valueWidth / 2;\n  }\n\n  setCategoriesBackgroundColor() {\n    const graphElements = this.elRefCategories.nativeElement.getElementsByClassName('graph');\n    const pairClasses = ['section-graph-odd', 'section-graph-even'];\n    let pairIx = 0;\n    let elementIx = 0;\n    for (let element of graphElements) {\n      element.classList.remove('section-graph-odd');\n      element.classList.remove('section-graph-even');\n      element.classList.add(pairClasses[pairIx]);\n      pairIx = 1 - pairIx;\n      ++elementIx === graphElements.length ? element.classList.add('last-section-graph') : element.classList.remove('last-section-graph');\n    }\n    this.cdr.detectChanges();\n  }\n\n  // onExpandCondense() {\n  //   this.setCategoriesBackgroundColor();\n  // }\n\n  // onTimelineWidth(width, categoryIx) {\n  //   if (categoryIx === 0) {\n  //     console.log('section width:', width, categoryIx);\n  //     this.timelineWidth = width;\n  //   }\n  // }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".title {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 1rem;\n}\n\n.content {\n  .categories-container {\n    app-medications-category {\n      display: block;\n    }\n  }\n  .x-axis-timeline {\n    display: flex;\n    justify-content: flex-end;\n    position: relative;\n    line-height: 1.5rem;\n    height: 1.5rem;\n    .x-axis-timeline-values {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      position: absolute;\n      > div {\n        text-align: center;\n        width: 100%;\n      }\n      &.top {\n        // align-items: flex-end;\n      }\n    }\n  }\n}\n\n\n",
                    "styleUrl": "./medications-section-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"title\">{{section.name}}</div>\n\n<div class=\"content\">\n  <ng-container *ngIf=\"timelineWidth\">\n\n    <ng-container\n      [ngTemplateOutlet]=\"xAxisTimelineTemplate\"\n      [ngTemplateOutletContext]=\"{isTop:true}\">\n    </ng-container>\n\n    <div #categories class=\"categories-container\">\n        <ng-container [ngSwitch]=\"section.type\">\n          <app-medications-section-timeline\n              *ngSwitchCase=\"MedicationsSectionType.Timeline\"\n              [section]=\"section\"\n              [timeline]=\"timeline\"\n              [preTimelineWidth]=\"preTimelineWidth\"\n              [timelineWidth]=\"timelineWidth\">\n          </app-medications-section-timeline>\n        </ng-container>\n    </div>\n\n    <ng-container\n        [ngTemplateOutlet]=\"xAxisTimelineTemplate\"\n        [ngTemplateOutletContext]=\"{isTop:false}\">\n    </ng-container>\n\n  </ng-container>\n\n</div>\n\n<ng-template #xAxisTimelineTemplate let-isTop=\"isTop\">\n  <div class=\"x-axis-timeline\"\n      [style.width.px]=\"timelineWidth\"\n      [style.margin-left.px]=\"preTimelineWidth\">\n    <div #xAxisTimeline\n         class=\"x-axis-timeline-values\"\n         [style.width.px]=\"timelineValuesWidth\"\n         [style.right.px]=\"timelineValuesRight\"\n         [ngClass]=\"isTop ? 'top' : 'bottom'\">\n      <div *ngFor=\"let value of timeline.xAxisValues\">{{value}}</div>\n    </div>\n  </div>\n</ng-template>\n"
        },
        {
            "name": "MedicationsSectionTimelineComponent",
            "id": "component-MedicationsSectionTimelineComponent-f199cb621c2feb5ff3d538b06d738d02958072b8cc72075def04af0563c31eade9d16c155aa1472b40bd4935181153194aca844fa0de976493cad6da9900fdc6",
            "file": "src/app/shared/components/system/medications-section-timeline/medications-section-timeline.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-medications-section-timeline",
            "styleUrls": [
                "./medications-section-timeline.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./medications-section-timeline.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "preTimelineWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "section",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "MedicationsSection",
                    "decorators": []
                },
                {
                    "name": "timeline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "MedicationTimeline",
                    "decorators": []
                },
                {
                    "name": "timelineWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "backgroundColored",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onExpandCondense",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MedicationsSection, MedicationTimeline } from '@models/medications-concentrated-data.model';\n\n@Component({\n  selector: 'app-medications-section-timeline',\n  templateUrl: './medications-section-timeline.component.html',\n  styleUrls: ['./medications-section-timeline.component.scss']\n})\nexport class MedicationsSectionTimelineComponent {\n  @Input() section: MedicationsSection;\n  @Input() timeline: MedicationTimeline;\n  @Input() preTimelineWidth = 0;\n  @Input() timelineWidth = 0;\n  @Output() backgroundColored = new EventEmitter();\n\n  onExpandCondense() {\n\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./medications-section-timeline.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-medications-category\n  *ngFor=\"let category of section.categories; let i=index\"\n  [category]=\"category\"\n  [timeline]=\"timeline\"\n  [preTimelineWidth]=\"preTimelineWidth\"\n  [timelineWidth]=\"timelineWidth\"\n  (expandCondense)=\"onExpandCondense()\"\n>\n</app-medications-category>\n"
        },
        {
            "name": "MedicationTesterComponent",
            "id": "component-MedicationTesterComponent-104b152f3439bc0e568929efd105ae42eeff75b9092195b6b861383f942bfab03ab5e67405022b2a8e0f15bbe446f5bf1a438348e2b42811f03e746973367a29",
            "file": "src/stories/components/medication-tester/medication-tester.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-medication-tester",
            "styleUrls": [
                "./medication-tester.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./medication-tester.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "defaultSettings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Direction",
                    "decorators": []
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accordionClass",
                    "defaultValue": "'settings-accordion'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MedicationsConcentratedData",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "isShowSettings",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "LOCAL_STORAGE_KEY",
                    "defaultValue": "'medicationsSettings'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "prevSettings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Settings",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "buildData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "clearLocalStorage",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getFromLocalStorage",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTimeline",
                    "args": [],
                    "optional": false,
                    "returnType": "MedicationTimeline",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChangePivotTime",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onChangeResolution",
                    "args": [
                        {
                            "name": "resolution",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "resolution",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onChangeSectionMedications",
                    "args": [
                        {
                            "name": "sectionIndex",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "medications",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sectionIndex",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "medications",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClickCancelSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickDefaultSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickResetTime",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClickSaveSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDeleteMedication",
                    "args": [
                        {
                            "name": "sectionIndex",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "medicationId",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sectionIndex",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "medicationId",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveToLocalStorage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Settings } from '@stories/models/settings.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { MedicationsCategory, MedicationsConcentratedData, MedicationsSection, MedicationTimeline } from '@models/medications-concentrated-data.model';\nimport { Direction } from '@stories/models/direction.model';\n\n@Component({\n  selector: 'app-medication-tester',\n  templateUrl: './medication-tester.component.html',\n  styleUrls: ['./medication-tester.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MedicationTesterComponent implements OnInit {\n  @Input() text: any;\n  @Input() direction: Direction;\n  @Input() defaultSettings;\n  settings: Settings;\n  LOCAL_STORAGE_KEY = 'medicationsSettings';\n  isShowSettings = false;\n  accordionClass = 'settings-accordion';\n  prevSettings;\n  data: MedicationsConcentratedData;\n\n  constructor(private cdr: ChangeDetectorRef, private toastr: ToastrService) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.initSettings();\n      // this.onClickSettings();\n      this.buildData();\n    }, 50);\n  }\n\n  initSettings() {\n    const item = this.getFromLocalStorage();\n    this.settings = item ? JSON.parse(item) : JSON.parse(JSON.stringify(this.defaultSettings));\n  }\n\n  onClickResetTime(e) {\n    this.settings.pivotTime = new Intl.DateTimeFormat('en-GB', { timeStyle: 'short' }).format(new Date());\n    this.saveToLocalStorage();\n  }\n\n  onChangePivotTime(e: Event) {\n    this.settings.pivotTime = (e.target as any).value;\n    if (this.settings.pivotTime.length === 2) this.settings.pivotTime += ':00';\n    this.saveToLocalStorage();\n  }\n\n  onClickSettings() {\n    this.prevSettings = JSON.parse(JSON.stringify(this.settings));\n    this.isShowSettings = true;\n  }\n\n  onChangeResolution(resolution) {\n    this.settings.resolution = resolution;\n    this.saveToLocalStorage();\n  }\n\n  onClickSaveSettings() {\n    this.saveToLocalStorage();\n    this.isShowSettings = false;\n  }\n\n  onClickCancelSettings() {\n    this.settings = this.prevSettings;\n    this.isShowSettings = false;\n  }\n\n  saveToLocalStorage() {\n    const item = JSON.stringify(this.settings);\n    localStorage.setItem(this.LOCAL_STORAGE_KEY, item);\n    this.toastr.success('Settings were saved');\n    this.buildData();\n  }\n\n  getFromLocalStorage() {\n    return localStorage.getItem(this.LOCAL_STORAGE_KEY);\n  }\n\n  clearLocalStorage() {\n    return localStorage.removeItem(this.LOCAL_STORAGE_KEY);\n  }\n\n  onChangeSectionMedications(sectionIndex, medications) {\n    this.settings.sections[sectionIndex].medications = medications;\n  }\n\n  onClickDefaultSettings() {\n    const isClear = confirm('are you sure');\n    if (isClear) {\n      this.clearLocalStorage();\n      this.settings = JSON.parse(JSON.stringify(this.defaultSettings));\n      this.cdr.detectChanges();\n    }\n  }\n\n  onDeleteMedication(sectionIndex, medicationId) {\n    const medications = this.settings.sections[sectionIndex].medications;\n    this.settings.sections[sectionIndex].medications = medications.filter(medication => medication.id !== medicationId);\n    this.cdr.detectChanges();\n  }\n\n  buildData() {\n    const getCategories = (medications): MedicationsCategory[] => {\n      const categories = {};\n      medications.forEach(medication => {\n        if (!categories[medication.categoryId]) categories[medication.categoryId] = [];\n        categories[medication.categoryId].push(medication);\n      });\n      const keys = Object.keys(categories);\n      return keys.map((key, i) => ({\n        id: Number(key),\n        name: `category ${key}`,\n        medications: categories[key]\n      }));\n    }\n\n    const getSection = (section, i): MedicationsSection => {\n      return {\n        id: 1,\n        type: section.type,\n        name: this.text.graphSections[i].title,\n        isDisplay: section.isDisplay,\n        categories: getCategories(section.medications)\n      }\n    }\n\n    this.data = {\n      title: {\n        fromTime: '2022-01-01 10:00',\n        toTime: '2022-01-02 17:00',\n      },\n      resolution: this.settings.resolution,\n      sections: this.settings.sections.map((section, i) => getSection(section, i)),\n      timeline: this.getTimeline()\n    }\n\n    // console.log('pivot time:', this.settings.pivotTime);\n    this.getTimeline();\n  }\n\n  getTimeline(): MedicationTimeline {\n    const currHour = Number(this.settings.pivotTime.substring(0, 2));\n    const hours = [];\n    for (let i = -6; i <= 6; i++) {\n      let hour = currHour + i;\n      if (hour < 0) hour += 24;\n      hours.push(String(hour).padStart(2, '0') + ':00');\n    }\n    // console.log('hours:', hours);\n    return {\n      range: {\n        fromTime: hours[0],\n        toTime: hours[12]\n      },\n      xAxisValues: hours\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$top-bar-height: 3rem;\n\n.top-bar {\n  background: black;\n  color: white;\n  height: $top-bar-height; // var(----top-bar-height);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-inline-end: 1.5rem;\n  border-bottom: 3px solid black;\n\n  .pivot-time {\n    display: flex;\n    align-items: center;\n    .bi-gear {\n      margin-inline-end: 2rem;\n      margin-inline-start: 1rem;\n    }\n    .settings-action-buttons {\n      padding-inline-end: 3rem;\n      display: inline-flex;\n      justify-content: flex-end;\n      background: white;\n       height: $top-bar-height;\n      margin-inline-end: 2rem;\n      align-items: center;\n      // transition: all 2s linear;\n      button {\n        width: 5rem;\n        margin-inline-start: 2rem;\n        //padding-top: 0;\n        //padding-bottom: 0;\n      }\n    }\n    .pivot-input {\n      margin-inline-start: 0.8rem;\n      margin-inline-end: 2rem;\n      width: 4rem;\n    }\n  }\n\n  select {\n    margin-inline-start: 1rem;\n  }\n}\n\n.data {\n  //padding: 1rem;\n}\n\n.settings {\n  margin-top: 1rem;\n  padding: 1rem;\n  .settings-table {\n    input {\n      margin-inline-start: 1rem;\n      margin-inline-end: 0.5rem;\n      width: 3rem;\n    }\n  }\n  .settings-sections {\n    margin-top: 2rem;\n    .settings-accordion {\n      .panel-heading {\n        background: #337aa7;\n        display: flex;\n        justify-content: space-between;\n      }\n      .btn-link {\n        color: white;\n        text-decoration: none;\n      }\n      .panel-body {\n        background: white;\n        position: relative;\n        padding-top: 0.5rem;\n        .section-display {\n          position: absolute;\n          top: 0.5rem;\n          right: 1rem;\n        }\n      }\n    }\n  }\n}\n\ni {\n  cursor: pointer;\n}\n\n\n/*\n.settings-modal {\n  //background: red !important;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  width: 100vW !important;\n  height: 100vh !important;\n  background: yellow;\n  margin: 0;\n  .modal-content {\n    width: 800px !important;\n  }\n}*/\n",
                    "styleUrl": "./medication-tester.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"settings\">\n\n  <header class=\"top-bar\" [dir]=\"direction\">\n    <div class=\"pivot-time\">\n      <div *ngIf=\"isShowSettings\" class=\"settings-action-buttons\">\n        <div>\n          <button type=\"button\" class=\"btn btn-success\" (click)=\"onClickSaveSettings()\">{{text.buttons.save}}</button>\n          <button type=\"button\" class=\"btn btn-danger\" (click)=\"onClickCancelSettings()\">{{text.buttons.cancel}}</button>\n        </div>\n      </div>\n      <i *ngIf=\"!isShowSettings\" class=\"bi bi-gear\" (click)=\"onClickSettings()\"></i>\n      <span>{{text.pivotTime.label}}</span>\n      <input [(ngModel)]=\"settings.pivotTime\" (change)=\"onChangePivotTime($event)\" class=\"pivot-input\">\n      <button (click)=\"onClickResetTime($event)\" type=\"button\" class=\"btn btn-primary\">{{text.pivotTime.button}}</button>\n    </div>\n    <div class=\"default-settings\">\n      <button type=\"button\" class=\"btn btn-warning\" (click)=\"onClickDefaultSettings()\">{{text.buttons.defaultSettings}}</button>\n    </div>\n  </header>\n\n  <div *ngIf=\"!isShowSettings && data\" class=\"data\">\n    <app-medications-concentrated\n      [direction]=\"direction\"\n      [text]=\"text\"\n      [data]=\"data\"\n      (resolution)=\"onChangeResolution($event)\"\n    ></app-medications-concentrated>\n  </div>\n\n  <div *ngIf=\"isShowSettings\" class=\"settings\">\n    <table class=\"settings-table\">\n      <tr><td>Hours forward</td><td><input [(ngModel)]=\"settings.hoursForward\" type=\"number\"></td></tr>\n      <tr><td>Hours backward</td><td><input [(ngModel)]=\"settings.hoursBackward\" type=\"number\"></td></tr>\n      <tr><td>Refresh time</td><td><input [(ngModel)]=\"settings.refreshTime\" type=\"number\">minutes</td></tr>\n    </table>\n\n    <accordion class=\"settings-sections\" [isAnimated]=\"true\">\n      <accordion-group *ngFor=\"let section of settings.sections; let i=index\"\n                       heading=\"{{text.graphSections[i].title}}\"\n                       [panelClass]=\"accordionClass\"\n                       [isOpen]=\"true\">\n        <div class=\"form-check section-display\">\n          <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"section.isDisplay\">&nbsp;&nbsp;Visible\n        </div>\n        <app-medication-lister\n            [medications]=\"section.medications\"\n            (change)=\"onChangeSectionMedications(i, $event)\"\n            (deleteMedication)=\"onDeleteMedication(i, $event)\"\n        ></app-medication-lister>\n      </accordion-group>\n    </accordion>\n  </div>\n\n</ng-container>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-f4971f87d84d7a4d0674e4ac7fcd2fc3e2e0d12bad116ec787d93b61546402b840827fa1f00a1fa9a1f1332674d1dcba4452d45637837d2e53b7eb28aa9d5cb9",
            "file": "src/app/shared/components/page/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from '@models/user.model';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-b1b01d01175d4bfbedd6a1cc192662a21bd003313bba8d19d3158f8869bc5bb97d1494015a94e86b5347ef8d80aad9fabadb4652f2e42fe211552a2228cef923",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { SharedModule } from '@shared/shared.module';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { SortableModule } from 'ngx-bootstrap/sortable';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule,\n\n    // bootstrap\n    ModalModule.forRoot(),\n    AccordionModule.forRoot(),\n    ButtonsModule.forRoot(),\n    SortableModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-fbada5f6abb9083f9e6a4e49ce08c41c6fc9059a14f2d3e6a80a4fe37ce08669cf4c5cc70728d7578f92034ddf7df68d68c764a7535bae675f3ebbdeece3c557",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxEchartsModule } from 'ngx-echarts';\nimport { GraphLinesComponent } from './components/graphs/graph-lines.component';\nimport { GraphPieComponent } from './components/graphs/graph-pie.component';\nimport { GraphTimelineCategoryComponent } from '@shared/components/graphs/graph-timeline-category.component';\nimport { GraphTimelineComponent } from '@shared/components/graphs/graph-timeline.component';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { SortableModule } from 'ngx-bootstrap/sortable';\nimport { ToastrModule } from 'ngx-toastr';\nimport { MedicationsConcentratedComponent } from '@shared/components/system/medications-concentrated/medications-concentrated.component';\nimport { MedicationsSectionContainerComponent } from './components/system/medications-section-container/medications-section-container.component';\nimport { MedicationsCategoryComponent } from './components/system/medications-category/medications-category.component';\nimport { MedicationGraphComponent } from './components/system/medication-graph/medication-graph.component';\nimport { MedicationsSectionTimelineComponent } from './components/system/medications-section-timeline/medications-section-timeline.component';\n\nconst declarations = [\n  GraphLinesComponent,\n  GraphPieComponent,\n  GraphTimelineComponent,\n  GraphTimelineCategoryComponent,\n  MedicationsConcentratedComponent,\n  MedicationsSectionContainerComponent,\n  MedicationsSectionTimelineComponent,\n  MedicationsCategoryComponent,\n  MedicationGraphComponent\n];\n\nconst modules = [\n  CommonModule,\n  BrowserModule,\n  FormsModule,\n  BrowserAnimationsModule,\n];\n\n@NgModule({\n  declarations,\n  imports: [\n    ...modules,\n    NgxEchartsModule.forRoot({\n      echarts: () => import('echarts')\n    }),\n\n    // toastr\n    ToastrModule.forRoot({\n      timeOut: 2000\n    })\n  ],\n  exports: [\n    ...declarations,\n    ...modules,\n    NgxEchartsModule,\n\n    // bootstrap\n    ModalModule,\n    AccordionModule,\n    ButtonsModule,\n    SortableModule,\n\n    // toastr\n    ToastrModule\n  ]\n})\nexport class SharedModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "GraphLinesComponent"
                        },
                        {
                            "name": "GraphPieComponent"
                        },
                        {
                            "name": "GraphTimelineCategoryComponent"
                        },
                        {
                            "name": "GraphTimelineComponent"
                        },
                        {
                            "name": "MedicationGraphComponent"
                        },
                        {
                            "name": "MedicationsCategoryComponent"
                        },
                        {
                            "name": "MedicationsConcentratedComponent"
                        },
                        {
                            "name": "MedicationsSectionContainerComponent"
                        },
                        {
                            "name": "MedicationsSectionTimelineComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "GraphLinesComponent"
                        },
                        {
                            "name": "GraphPieComponent"
                        },
                        {
                            "name": "GraphTimelineCategoryComponent"
                        },
                        {
                            "name": "GraphTimelineComponent"
                        },
                        {
                            "name": "MedicationGraphComponent"
                        },
                        {
                            "name": "MedicationsCategoryComponent"
                        },
                        {
                            "name": "MedicationsConcentratedComponent"
                        },
                        {
                            "name": "MedicationsSectionContainerComponent"
                        },
                        {
                            "name": "MedicationsSectionTimelineComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "עברית",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/graphs/medications-concentrated.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ConcentratedDisplayStoryTemplate",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  GraphLinesComponent,\n  GraphPieComponent,\n  GraphTimelineComponent,\n  GraphTimelineCategoryComponent,\n  MedicationsConcentratedComponent,\n  MedicationsSectionContainerComponent,\n  MedicationsSectionTimelineComponent,\n  MedicationsCategoryComponent,\n  MedicationGraphComponent\n]"
            },
            {
                "name": "defaultSettings",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/const/default-settings.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  languageCode: 'en',\n  resolution: '1hour',\n  pivotTime: '10:00',\n  hoursForward: 14,\n  hoursBackward: 5,\n  refreshTime: 2,\n  sections: [\n    {\n      isDisplay: true,\n      type: MedicationsSectionType.Timeline,\n      medications: [\n        { id: 10, name: 'Medication 10', categoryId: 1, type: ExecutionType.Continuous, timingType: null, times: ['', '', ''], orderTime: 10, executionTime: 20, duration: 480 },\n        { id: 11, name: 'Medication 11', categoryId: 1, type: ExecutionType.Periodic, timingType: null, times: ['08:00', '14:00', '20:00'], orderTime: 0, executionTime: 0, duration: 0 },\n      ]\n    }\n  ]\n}"
            },
            {
                "name": "English",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/graphs/medications-concentrated.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ConcentratedDisplayStoryTemplate",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/examples/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/examples/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/examples/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/examples/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/examples/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MedicationCategories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/const/medication-categories.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  { id: 1, label: 'Category 1' },\n  { id: 2, label: 'Category 2' },\n  { id: 3, label: 'Category 3' },\n  { id: 4, label: 'Category 4' },\n  { id: 5, label: 'Category 5' },\n  { id: 6, label: 'Category 6' },\n  { id: 7, label: 'Category 7' },\n  { id: 8, label: 'Category 8' },\n  { id: 9, label: 'Category 9' }\n]"
            },
            {
                "name": "medications",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/const/medications.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  { id: 10, name: 'Medication 10', categoryId: 1 },\n  { id: 11, name: 'Medication 11', categoryId: 1 },\n  { id: 12, name: 'Medication 12', categoryId: 1 },\n  { id: 13, name: 'Medication 13', categoryId: 1 },\n  { id: 14, name: 'Medication 14', categoryId: 1 },\n  { id: 15, name: 'Medication 15', categoryId: 1 },\n  { id: 16, name: 'Medication 16', categoryId: 1 },\n  { id: 17, name: 'Medication 17', categoryId: 1 },\n  { id: 18, name: 'Medication 18', categoryId: 1 },\n  { id: 19, name: 'Medication 19', categoryId: 1 },\n\n  { id: 20, name: 'Medication 20', categoryId: 2 },\n  { id: 21, name: 'Medication 21', categoryId: 2 },\n  { id: 22, name: 'Medication 22', categoryId: 2 },\n  { id: 23, name: 'Medication 23', categoryId: 2 },\n  { id: 24, name: 'Medication 24', categoryId: 2 },\n  { id: 25, name: 'Medication 25', categoryId: 2 },\n  { id: 26, name: 'Medication 26', categoryId: 2 },\n  { id: 27, name: 'Medication 27', categoryId: 2 },\n  { id: 28, name: 'Medication 28', categoryId: 2 },\n  { id: 29, name: 'Medication 29', categoryId: 2 },\n\n  { id: 30, name: 'Medication 30', categoryId: 3 },\n  { id: 31, name: 'Medication 31', categoryId: 3 },\n  { id: 32, name: 'Medication 32', categoryId: 3 },\n  { id: 33, name: 'Medication 33', categoryId: 3 },\n  { id: 34, name: 'Medication 34', categoryId: 3 },\n  { id: 35, name: 'Medication 35', categoryId: 3 },\n  { id: 36, name: 'Medication 36', categoryId: 3 },\n  { id: 37, name: 'Medication 37', categoryId: 3 },\n  { id: 38, name: 'Medication 38', categoryId: 3 },\n  { id: 39, name: 'Medication 39', categoryId: 3 },\n\n  { id: 40, name: 'Medication 40', categoryId: 4 },\n  { id: 41, name: 'Medication 41', categoryId: 4 },\n  { id: 42, name: 'Medication 42', categoryId: 4 },\n  { id: 43, name: 'Medication 43', categoryId: 4 },\n  { id: 44, name: 'Medication 44', categoryId: 4 },\n  { id: 45, name: 'Medication 45', categoryId: 4 },\n  { id: 46, name: 'Medication 46', categoryId: 4 },\n  { id: 47, name: 'Medication 47', categoryId: 4 },\n  { id: 48, name: 'Medication 48', categoryId: 4 },\n  { id: 49, name: 'Medication 49', categoryId: 4 },\n]"
            },
            {
                "name": "mockDataGraphLines",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/mock-data/mock-data-graph-lines.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n  metadata: {\n    type: GraphType.LinesRegular,\n    height: '600px'\n  },\n  data: {\n    title: {\n      text: 'Lines Graph Example',\n    },\n    legend: {\n      data: ['Email', 'Union Ads', 'Video Ads', 'Direct', 'Search Engine']\n    },\n    xAxis: {\n      data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n    },\n    series: {\n      data: [\n        { name: 'Email', data: [120, 132, 101, 134, 90, 230, 210] },\n        { name: 'Union Ads', data: [220, 182, 191, 234, 290, 330, 310] },\n        { name: 'Video Ads', data: [150, 232, 201, 154, 190, 330, 410] },\n        { name: 'Direct', data: [320, 332, 301, 334, 390, 330, 320] },\n        { name: 'Search Engine', data: [820, 932, 901, 934, 1290, 1330, 1320] }\n      ]\n    }\n  }\n}"
            },
            {
                "name": "mockDataGraphPie",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/mock-data/mock-data-graph-pie.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n  metadata: {\n    type: GraphType.LinesRegular,\n    height: '600px'\n  },\n  data: {\n    title: {\n      text: 'Pie Graph Example'\n    },\n    legend: {\n      data: ['Direct Visit', 'Union Ads', 'Search Engine']\n    },\n    series: {\n      data: [\n        { name: 'Direct Visit', value: 335 },\n        { name: 'Union Ads', value: 234 },\n        { name: 'Search Engine', value: 1548 }\n      ]\n    }\n  }\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  CommonModule,\n  BrowserModule,\n  FormsModule,\n  BrowserAnimationsModule,\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/examples/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Regular",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/graphs/lines.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "GraphStoryTemplate",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Regular",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/graphs/pie.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "GraphStoryTemplate",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/examples/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/examples/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/examples/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/examples/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/examples/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/graphs/lines.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<GraphLinesComponent>",
                "defaultValue": "(args: GraphLinesComponent) => ({ props: args })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/graphs/medications-concentrated.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MedicationTesterComponent>",
                "defaultValue": "(args: MedicationTesterComponent) => ({ props: args })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/graphs/pie.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<GraphPieComponent>",
                "defaultValue": "(args: GraphPieComponent) => ({ props: args })"
            },
            {
                "name": "textEn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/const/text-en.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  direction: 'ltr',\n  text: {\n    buttons: {\n      save: 'Save',\n      cancel: 'cancel',\n      defaultSettings: 'Reset to Default Settings'\n    },\n    pivotTime: {\n      label: 'Pivot time',\n      button: 'Reset Time'\n    },\n    resolution: {\n      label: 'Resolution',\n      options: [\n        { value: '1m', label: '1 minute' },\n        { value: '2m', label: '2 minutes' },\n        { value: '5m', label: '5 minutes' },\n        { value: '15m', label: '15 minutes' },\n        { value: '30m', label: '30 minutes' },\n        { value: '1h', label: '1 hour' },\n        { value: '2h', label: '2 hours' },\n        { value: '4h', label: '4 hours' },\n        { value: '8h', label: '8 hours' },\n        { value: '24h', label: '24 hours' }\n      ]\n    },\n    graphSections: [\n      { title: 'Medications' },\n      { title: 'Operations' },\n      { title: 'Metrics' },\n      { title: 'Table Metrics' }\n    ],\n    medicationsConcentrated: {\n      legend: 'Legend'\n    }\n  }\n} as const"
            },
            {
                "name": "textHe",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/const/text-he.const.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  direction: 'rtl',\n  text: {\n    buttons: {\n      save: 'שמירה',\n      cancel: 'ביטול',\n      defaultSettings: 'איפוס הגדרות'\n    },\n    pivotTime: {\n      label: 'שעת ציר',\n      button: 'זמן נוכחי'\n    },\n    resolution: {\n      label: 'רזולוציה',\n      options: [\n        { value: '1m', label: 'דקה 1' },\n        { value: '2m', label: '2 דקות' },\n        { value: '5m', label: '5 דקות' },\n        { value: '15m', label: '15 דקות' },\n        { value: '30m', label: '30 דקות' },\n        { value: '1h', label: 'שעה 1' },\n        { value: '2h', label: '2 שעות' },\n        { value: '4h', label: '4 שעות' },\n        { value: '8h', label: '8 שעות' },\n        { value: '24h', label: '24 שעות' }\n      ]\n    },\n    graphSections: [\n      { title: 'תרופות' },\n      { title: 'פעולות' },\n      { title: 'מדדים' },\n      { title: 'מדדים בטבלה' }\n    ],\n    medicationsConcentrated: {\n      legend: 'מקרא'\n    }\n  }\n} as const"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Direction",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"rtl\" | \"ltr\"",
                "file": "src/stories/models/direction.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "EChartsOption",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "echarts.EChartsOption",
                "file": "src/app/shared/base-classes/base-graph.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "GraphSeriesDataLines",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Array<literal type>",
                "file": "src/app/shared/models/graph-data.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "GraphSeriesDataPie",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Array<literal type>",
                "file": "src/app/shared/models/graph-data.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            }
        ],
        "enumerations": [
            {
                "name": "ExecutionType",
                "childs": [
                    {
                        "name": "Periodic",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Periodic"
                    },
                    {
                        "name": "Continuous",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Continuous"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/stories/enums/execution-type.enum.ts"
            },
            {
                "name": "GraphType",
                "childs": [
                    {
                        "name": "LinesRegular",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "LinesRegular"
                    },
                    {
                        "name": "PieRegular",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PieRegular"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enums/graph-type.enum.ts"
            },
            {
                "name": "MedicationsSectionType",
                "childs": [
                    {
                        "name": "Timeline",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Timeline"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enums/medications-section-type.enum.ts"
            },
            {
                "name": "TimelineResolution",
                "childs": [
                    {
                        "name": "Minutes1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "1m"
                    },
                    {
                        "name": "Minutes2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "2m"
                    },
                    {
                        "name": "Minutes5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "5m"
                    },
                    {
                        "name": "Minutes15",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "15m"
                    },
                    {
                        "name": "Minutes30",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "30m"
                    },
                    {
                        "name": "Hours1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "1h"
                    },
                    {
                        "name": "Hours2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "2h"
                    },
                    {
                        "name": "Hours4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "4h"
                    },
                    {
                        "name": "Hours8",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "8h"
                    },
                    {
                        "name": "Hours24",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "24h"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enums/timeline-resolution.enum.ts"
            }
        ],
        "groupedVariables": {
            "src/stories/graphs/medications-concentrated.stories.ts": [
                {
                    "name": "עברית",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/graphs/medications-concentrated.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConcentratedDisplayStoryTemplate",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "English",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/graphs/medications-concentrated.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConcentratedDisplayStoryTemplate",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/graphs/medications-concentrated.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MedicationTesterComponent>",
                    "defaultValue": "(args: MedicationTesterComponent) => ({ props: args })"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/shared/shared.module.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  GraphLinesComponent,\n  GraphPieComponent,\n  GraphTimelineComponent,\n  GraphTimelineCategoryComponent,\n  MedicationsConcentratedComponent,\n  MedicationsSectionContainerComponent,\n  MedicationsSectionTimelineComponent,\n  MedicationsCategoryComponent,\n  MedicationGraphComponent\n]"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  CommonModule,\n  BrowserModule,\n  FormsModule,\n  BrowserAnimationsModule,\n]"
                }
            ],
            "src/stories/const/default-settings.const.ts": [
                {
                    "name": "defaultSettings",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/const/default-settings.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  languageCode: 'en',\n  resolution: '1hour',\n  pivotTime: '10:00',\n  hoursForward: 14,\n  hoursBackward: 5,\n  refreshTime: 2,\n  sections: [\n    {\n      isDisplay: true,\n      type: MedicationsSectionType.Timeline,\n      medications: [\n        { id: 10, name: 'Medication 10', categoryId: 1, type: ExecutionType.Continuous, timingType: null, times: ['', '', ''], orderTime: 10, executionTime: 20, duration: 480 },\n        { id: 11, name: 'Medication 11', categoryId: 1, type: ExecutionType.Periodic, timingType: null, times: ['08:00', '14:00', '20:00'], orderTime: 0, executionTime: 0, duration: 0 },\n      ]\n    }\n  ]\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/stories/examples/button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/examples/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/examples/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/examples/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/examples/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/examples/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/examples/header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/examples/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/examples/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/examples/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/examples/page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/examples/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/examples/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/examples/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/const/medication-categories.const.ts": [
                {
                    "name": "MedicationCategories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/const/medication-categories.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  { id: 1, label: 'Category 1' },\n  { id: 2, label: 'Category 2' },\n  { id: 3, label: 'Category 3' },\n  { id: 4, label: 'Category 4' },\n  { id: 5, label: 'Category 5' },\n  { id: 6, label: 'Category 6' },\n  { id: 7, label: 'Category 7' },\n  { id: 8, label: 'Category 8' },\n  { id: 9, label: 'Category 9' }\n]"
                }
            ],
            "src/stories/const/medications.const.ts": [
                {
                    "name": "medications",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/const/medications.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  { id: 10, name: 'Medication 10', categoryId: 1 },\n  { id: 11, name: 'Medication 11', categoryId: 1 },\n  { id: 12, name: 'Medication 12', categoryId: 1 },\n  { id: 13, name: 'Medication 13', categoryId: 1 },\n  { id: 14, name: 'Medication 14', categoryId: 1 },\n  { id: 15, name: 'Medication 15', categoryId: 1 },\n  { id: 16, name: 'Medication 16', categoryId: 1 },\n  { id: 17, name: 'Medication 17', categoryId: 1 },\n  { id: 18, name: 'Medication 18', categoryId: 1 },\n  { id: 19, name: 'Medication 19', categoryId: 1 },\n\n  { id: 20, name: 'Medication 20', categoryId: 2 },\n  { id: 21, name: 'Medication 21', categoryId: 2 },\n  { id: 22, name: 'Medication 22', categoryId: 2 },\n  { id: 23, name: 'Medication 23', categoryId: 2 },\n  { id: 24, name: 'Medication 24', categoryId: 2 },\n  { id: 25, name: 'Medication 25', categoryId: 2 },\n  { id: 26, name: 'Medication 26', categoryId: 2 },\n  { id: 27, name: 'Medication 27', categoryId: 2 },\n  { id: 28, name: 'Medication 28', categoryId: 2 },\n  { id: 29, name: 'Medication 29', categoryId: 2 },\n\n  { id: 30, name: 'Medication 30', categoryId: 3 },\n  { id: 31, name: 'Medication 31', categoryId: 3 },\n  { id: 32, name: 'Medication 32', categoryId: 3 },\n  { id: 33, name: 'Medication 33', categoryId: 3 },\n  { id: 34, name: 'Medication 34', categoryId: 3 },\n  { id: 35, name: 'Medication 35', categoryId: 3 },\n  { id: 36, name: 'Medication 36', categoryId: 3 },\n  { id: 37, name: 'Medication 37', categoryId: 3 },\n  { id: 38, name: 'Medication 38', categoryId: 3 },\n  { id: 39, name: 'Medication 39', categoryId: 3 },\n\n  { id: 40, name: 'Medication 40', categoryId: 4 },\n  { id: 41, name: 'Medication 41', categoryId: 4 },\n  { id: 42, name: 'Medication 42', categoryId: 4 },\n  { id: 43, name: 'Medication 43', categoryId: 4 },\n  { id: 44, name: 'Medication 44', categoryId: 4 },\n  { id: 45, name: 'Medication 45', categoryId: 4 },\n  { id: 46, name: 'Medication 46', categoryId: 4 },\n  { id: 47, name: 'Medication 47', categoryId: 4 },\n  { id: 48, name: 'Medication 48', categoryId: 4 },\n  { id: 49, name: 'Medication 49', categoryId: 4 },\n]"
                }
            ],
            "src/stories/mock-data/mock-data-graph-lines.const.ts": [
                {
                    "name": "mockDataGraphLines",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/mock-data/mock-data-graph-lines.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n  metadata: {\n    type: GraphType.LinesRegular,\n    height: '600px'\n  },\n  data: {\n    title: {\n      text: 'Lines Graph Example',\n    },\n    legend: {\n      data: ['Email', 'Union Ads', 'Video Ads', 'Direct', 'Search Engine']\n    },\n    xAxis: {\n      data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n    },\n    series: {\n      data: [\n        { name: 'Email', data: [120, 132, 101, 134, 90, 230, 210] },\n        { name: 'Union Ads', data: [220, 182, 191, 234, 290, 330, 310] },\n        { name: 'Video Ads', data: [150, 232, 201, 154, 190, 330, 410] },\n        { name: 'Direct', data: [320, 332, 301, 334, 390, 330, 320] },\n        { name: 'Search Engine', data: [820, 932, 901, 934, 1290, 1330, 1320] }\n      ]\n    }\n  }\n}"
                }
            ],
            "src/stories/mock-data/mock-data-graph-pie.const.ts": [
                {
                    "name": "mockDataGraphPie",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/mock-data/mock-data-graph-pie.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n  metadata: {\n    type: GraphType.LinesRegular,\n    height: '600px'\n  },\n  data: {\n    title: {\n      text: 'Pie Graph Example'\n    },\n    legend: {\n      data: ['Direct Visit', 'Union Ads', 'Search Engine']\n    },\n    series: {\n      data: [\n        { name: 'Direct Visit', value: 335 },\n        { name: 'Union Ads', value: 234 },\n        { name: 'Search Engine', value: 1548 }\n      ]\n    }\n  }\n}"
                }
            ],
            "src/stories/graphs/lines.stories.ts": [
                {
                    "name": "Regular",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/graphs/lines.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GraphStoryTemplate",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/graphs/lines.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<GraphLinesComponent>",
                    "defaultValue": "(args: GraphLinesComponent) => ({ props: args })"
                }
            ],
            "src/stories/graphs/pie.stories.ts": [
                {
                    "name": "Regular",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/graphs/pie.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GraphStoryTemplate",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/graphs/pie.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<GraphPieComponent>",
                    "defaultValue": "(args: GraphPieComponent) => ({ props: args })"
                }
            ],
            "src/stories/const/text-en.const.ts": [
                {
                    "name": "textEn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/const/text-en.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  direction: 'ltr',\n  text: {\n    buttons: {\n      save: 'Save',\n      cancel: 'cancel',\n      defaultSettings: 'Reset to Default Settings'\n    },\n    pivotTime: {\n      label: 'Pivot time',\n      button: 'Reset Time'\n    },\n    resolution: {\n      label: 'Resolution',\n      options: [\n        { value: '1m', label: '1 minute' },\n        { value: '2m', label: '2 minutes' },\n        { value: '5m', label: '5 minutes' },\n        { value: '15m', label: '15 minutes' },\n        { value: '30m', label: '30 minutes' },\n        { value: '1h', label: '1 hour' },\n        { value: '2h', label: '2 hours' },\n        { value: '4h', label: '4 hours' },\n        { value: '8h', label: '8 hours' },\n        { value: '24h', label: '24 hours' }\n      ]\n    },\n    graphSections: [\n      { title: 'Medications' },\n      { title: 'Operations' },\n      { title: 'Metrics' },\n      { title: 'Table Metrics' }\n    ],\n    medicationsConcentrated: {\n      legend: 'Legend'\n    }\n  }\n} as const"
                }
            ],
            "src/stories/const/text-he.const.ts": [
                {
                    "name": "textHe",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/const/text-he.const.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  direction: 'rtl',\n  text: {\n    buttons: {\n      save: 'שמירה',\n      cancel: 'ביטול',\n      defaultSettings: 'איפוס הגדרות'\n    },\n    pivotTime: {\n      label: 'שעת ציר',\n      button: 'זמן נוכחי'\n    },\n    resolution: {\n      label: 'רזולוציה',\n      options: [\n        { value: '1m', label: 'דקה 1' },\n        { value: '2m', label: '2 דקות' },\n        { value: '5m', label: '5 דקות' },\n        { value: '15m', label: '15 דקות' },\n        { value: '30m', label: '30 דקות' },\n        { value: '1h', label: 'שעה 1' },\n        { value: '2h', label: '2 שעות' },\n        { value: '4h', label: '4 שעות' },\n        { value: '8h', label: '8 שעות' },\n        { value: '24h', label: '24 שעות' }\n      ]\n    },\n    graphSections: [\n      { title: 'תרופות' },\n      { title: 'פעולות' },\n      { title: 'מדדים' },\n      { title: 'מדדים בטבלה' }\n    ],\n    medicationsConcentrated: {\n      legend: 'מקרא'\n    }\n  }\n} as const"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/stories/enums/execution-type.enum.ts": [
                {
                    "name": "ExecutionType",
                    "childs": [
                        {
                            "name": "Periodic",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Periodic"
                        },
                        {
                            "name": "Continuous",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Continuous"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/stories/enums/execution-type.enum.ts"
                }
            ],
            "src/app/shared/enums/graph-type.enum.ts": [
                {
                    "name": "GraphType",
                    "childs": [
                        {
                            "name": "LinesRegular",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "LinesRegular"
                        },
                        {
                            "name": "PieRegular",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PieRegular"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enums/graph-type.enum.ts"
                }
            ],
            "src/app/shared/enums/medications-section-type.enum.ts": [
                {
                    "name": "MedicationsSectionType",
                    "childs": [
                        {
                            "name": "Timeline",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Timeline"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enums/medications-section-type.enum.ts"
                }
            ],
            "src/app/shared/enums/timeline-resolution.enum.ts": [
                {
                    "name": "TimelineResolution",
                    "childs": [
                        {
                            "name": "Minutes1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "1m"
                        },
                        {
                            "name": "Minutes2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "2m"
                        },
                        {
                            "name": "Minutes5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "5m"
                        },
                        {
                            "name": "Minutes15",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "15m"
                        },
                        {
                            "name": "Minutes30",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "30m"
                        },
                        {
                            "name": "Hours1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "1h"
                        },
                        {
                            "name": "Hours2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "2h"
                        },
                        {
                            "name": "Hours4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "4h"
                        },
                        {
                            "name": "Hours8",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "8h"
                        },
                        {
                            "name": "Hours24",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "24h"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enums/timeline-resolution.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/stories/models/direction.model.ts": [
                {
                    "name": "Direction",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"rtl\" | \"ltr\"",
                    "file": "src/stories/models/direction.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/shared/base-classes/base-graph.ts": [
                {
                    "name": "EChartsOption",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "echarts.EChartsOption",
                    "file": "src/app/shared/base-classes/base-graph.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/shared/models/graph-data.model.ts": [
                {
                    "name": "GraphSeriesDataLines",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Array<literal type>",
                    "file": "src/app/shared/models/graph-data.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "GraphSeriesDataPie",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Array<literal type>",
                    "file": "src/app/shared/models/graph-data.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/base-classes/base-graph.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BaseGraph",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/base-classes/base-horizontal-bar.ts",
                "type": "class",
                "linktype": "classe",
                "name": "BaseHorizontalBar",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/graphs/graph-lines.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GraphLinesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/graphs/graph-pie.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GraphPieComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/graphs/graph-timeline-category.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GraphTimelineCategoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/graphs/graph-timeline.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GraphTimelineComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/page/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/system/medication-graph/medication-graph.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MedicationGraphComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/system/medications-category/medications-category.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MedicationsCategoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/system/medications-concentrated/medications-concentrated.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MedicationsConcentratedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/system/medications-section-container/medications-section-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MedicationsSectionContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/system/medications-section-timeline/medications-section-timeline.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MedicationsSectionTimelineComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/graph-data.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GraphData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/graph-metadata.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GraphMetadata",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/medications-concentrated-data.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MedicationsCategory",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/medications-concentrated-data.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MedicationsConcentratedData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/medications-concentrated-data.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MedicationsSection",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/medications-concentrated-data.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MedicationTimeline",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/user.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/medication-lister-item/medication-lister-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MedicationListerItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/medication-lister/medication-lister.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MedicationListerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/medication-tester/medication-tester.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MedicationTesterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/stories/const/default-settings.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultSettings",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/const/medication-categories.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MedicationCategories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/const/medications.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "medications",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/const/text-en.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "textEn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/const/text-he.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "textHe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/examples/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/examples/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/examples/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/examples/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/examples/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/examples/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/examples/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/examples/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/examples/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/examples/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/examples/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/graphs/lines.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Regular",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/graphs/lines.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/graphs/medications-concentrated.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "עברית",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/graphs/medications-concentrated.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "English",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/graphs/medications-concentrated.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/graphs/pie.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Regular",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/graphs/pie.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/mock-data/mock-data-graph-lines.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockDataGraphLines",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/mock-data/mock-data-graph-pie.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockDataGraphPie",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/models/medication.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Medication",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/models/settings.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Settings",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/models/templates/concentrated-display-story-template.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ConcentratedDisplayStoryTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/models/templates/graph-story-template.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GraphStoryTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}